[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\utils\\setAuthToken.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"19","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"20","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js":"21","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js":"22"},{"size":469,"mtime":1612935527724,"results":"23","hashOfConfig":"24"},{"size":1004,"mtime":1613024014684,"results":"25","hashOfConfig":"24"},{"size":4801,"mtime":1613043209909,"results":"26","hashOfConfig":"24"},{"size":3524,"mtime":1613023801910,"results":"27","hashOfConfig":"24"},{"size":3372,"mtime":1613105323230,"results":"28","hashOfConfig":"24"},{"size":138,"mtime":1612937838477,"results":"29","hashOfConfig":"24"},{"size":4475,"mtime":1613043215693,"results":"30","hashOfConfig":"24"},{"size":362,"mtime":1606886196678,"results":"31","hashOfConfig":"24"},{"size":969,"mtime":1612933219433,"results":"32","hashOfConfig":"24"},{"size":443,"mtime":1612936776068,"results":"33","hashOfConfig":"24"},{"size":439,"mtime":1612951058953,"results":"34","hashOfConfig":"24"},{"size":251,"mtime":1612938552228,"results":"35","hashOfConfig":"24"},{"size":1246,"mtime":1613104033191,"results":"36","hashOfConfig":"24"},{"size":235,"mtime":1613037914716,"results":"37","hashOfConfig":"24"},{"size":1080,"mtime":1613024232600,"results":"38","hashOfConfig":"24"},{"size":272,"mtime":1612932227806,"results":"39","hashOfConfig":"24"},{"size":9688,"mtime":1613105263106,"results":"40","hashOfConfig":"24"},{"size":688,"mtime":1612953030861,"results":"41","hashOfConfig":"24"},{"size":322,"mtime":1612933214649,"results":"42","hashOfConfig":"24"},{"size":4531,"mtime":1613038240709,"results":"43","hashOfConfig":"24"},{"size":637,"mtime":1613027629282,"results":"44","hashOfConfig":"24"},{"size":278,"mtime":1613027244048,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1iylv84",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js",[],["100","101"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js",["102"],"import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Toaster } from 'react-hot-toast'\nimport PrivateRoute from 'routing/PrivateRoute'\n\nimport LoginPage from 'pages/auth/LoginPage'\nimport RegisterPage from 'pages/auth/RegisterPage'\nimport HomePage from 'pages/doctor/HomePage'\nimport NotFound from 'pages/NotFound'\nimport { useAuth } from 'context/use-auth'\nimport PatientListPage from 'pages/doctor/PatientListPage'\n\nconst App = () => {\n  const { loadUser } = useAuth()\n\n  useEffect(() => {\n    if (localStorage.token) {\n      loadUser()\n    }\n  }, [])\n\n  return (\n    <>\n      <Toaster />\n      <Switch>\n        <PrivateRoute exact path='/' component={HomePage} />\n        <PrivateRoute exact path='/patientList' component={PatientListPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/login' component={LoginPage} />\n        <Route path='/*' component={NotFound} />\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n",["103","104"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js",["105","106","107"],"import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport toast from 'react-hot-toast'\r\nimport { FcGoogle } from 'react-icons/fc'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport Button from 'components/shared/Forms/Button'\r\nimport Input from 'components/shared/Forms/Input'\r\nimport PasswordInput from 'components/shared/Forms/PasswordInput'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport client from 'services/client'\r\n\r\nconst LoginPage = () => {\r\n  const { handleSubmit, register, errors } = useForm()\r\n  const {\r\n    registerUser,\r\n    error,\r\n    clearErrors,\r\n    isAuthenticated,\r\n    loadUser,\r\n  } = useAuth()\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // setAuthToken(localStorage.token)\r\n      history.replace('/')\r\n    }\r\n\r\n    if (error) {\r\n      toast.error(error)\r\n      clearErrors()\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated])\r\n\r\n  const onSubmit = ({ name, email, password }) => {\r\n    registerUser({\r\n      name,\r\n      emailID: email,\r\n      password,\r\n      role: 'doctor',\r\n    })\r\n    clearErrors()\r\n  }\r\n\r\n  const handleGoogleAuth = async (res) => {\r\n    console.log('Ress', res.profileObj)\r\n    try {\r\n      setLoading(true)\r\n      const password = res.profileObj.googleId + Date.now()\r\n      const googleRes = await client.post('/auth/saveGoogle', {\r\n        name: res.profileObj.name,\r\n        emailID: res.profileObj.email,\r\n        password: password,\r\n        role: 'doctor',\r\n      })\r\n      localStorage.setItem('token', googleRes.data.token)\r\n      loadUser()\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log('Error', error)\r\n      toast.error('Something Went Wrong! Please try after some time')\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='center'>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      <div className='form__wrapper'>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-center'>New User!</h2>\r\n\r\n          <Input\r\n            label='Name'\r\n            name='name'\r\n            type='text'\r\n            placeholder='john doe'\r\n            myRef={register({\r\n              required: 'Please enter your name',\r\n            })}\r\n            error={errors.name}\r\n          />\r\n          <Input\r\n            label='Email'\r\n            name='email'\r\n            type='email'\r\n            placeholder='john@gmail.com'\r\n            myRef={register({\r\n              required: 'Please enter your email',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: 'invalid email address',\r\n              },\r\n            })}\r\n            error={errors.email}\r\n          />\r\n          <PasswordInput\r\n            label='Password'\r\n            name='password'\r\n            placeholder='********'\r\n            myRef={register({\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 8,\r\n                message: 'Password must be atleast 8 characters long',\r\n              },\r\n            })}\r\n            error={errors.password}\r\n          />\r\n\r\n          <Button classNames='full' type='submit'>\r\n            Register\r\n          </Button>\r\n        </form>\r\n        {/* <hr />\r\n\r\n        <GoogleLogin\r\n          clientId='320113619885-gk7d3v66vs3bf4nksn6mf3tj2s6prgcs.apps.googleusercontent.com'\r\n          buttonText='Login With Google'\r\n          onSuccess={handleGoogleAuth}\r\n          // onFailure={handleGoogleAuth}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={(renderProps) => (\r\n            <button\r\n              onClick={renderProps.onClick}\r\n              style={{\r\n                padding: '15px 20px',\r\n                width: '100%',\r\n                border: 'none',\r\n                fontSize: '1.5rem',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <FcGoogle style={{ fontSize: '2.5rem' }} />\r\n                <span className='google__text'>Register With Google</span>\r\n              </div>\r\n            </button>\r\n          )}\r\n        /> */}\r\n      </div>\r\n      <div className='flex-sbt py-10'>\r\n        <span>Already have an account?</span>\r\n\r\n        <Link to='/login' className='btn'>\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n",["108","109"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["110"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js",["111","112","113"],"import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport toast from 'react-hot-toast'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FcGoogle } from 'react-icons/fc'\r\n\r\nimport Button from 'components/shared/Forms/Button'\r\nimport Input from 'components/shared/Forms/Input'\r\nimport PasswordInput from 'components/shared/Forms/PasswordInput'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport client from 'services/client'\r\n\r\nconst LoginPage = () => {\r\n  const { handleSubmit, register, errors } = useForm()\r\n  const { loginUser, error, clearErrors, isAuthenticated, loadUser } = useAuth()\r\n  const history = useHistory()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      // setAuthToken(localStorage.token)\r\n      history.replace('/')\r\n    }\r\n\r\n    if (error) {\r\n      toast.error(error)\r\n      clearErrors()\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated])\r\n\r\n  const onSubmit = ({ email, password }) => {\r\n    console.log('cliekd')\r\n    loginUser({\r\n      emailID: email,\r\n      password,\r\n    })\r\n    clearErrors()\r\n  }\r\n\r\n  const handleGoogleAuth = async (res) => {\r\n    console.log('Ress', res.profileObj)\r\n    try {\r\n      setLoading(true)\r\n      const password = res.profileObj.googleId + Date.now()\r\n      const googleRes = await client.post('/auth/saveGoogle', {\r\n        name: res.profileObj.name,\r\n        emailID: res.profileObj.email,\r\n        password: password,\r\n        role: 'doctor',\r\n      })\r\n      localStorage.setItem('token', googleRes.data.token)\r\n      loadUser()\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log('Error', error)\r\n      toast.error('Something Went Wrong! Please try after some time')\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='center'>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      <div className='form__wrapper'>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-center'>Welcome</h2>\r\n\r\n          <Input\r\n            label='Email'\r\n            name='email'\r\n            type='email'\r\n            placeholder='john@gmail.com'\r\n            myRef={register({\r\n              required: 'Please enter your email',\r\n              pattern: {\r\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                message: 'invalid email address',\r\n              },\r\n            })}\r\n            error={errors.email}\r\n          />\r\n          <PasswordInput\r\n            label='Password'\r\n            name='password'\r\n            placeholder='********'\r\n            myRef={register({\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 8,\r\n                message: 'Password must be atleast 8 characters long',\r\n              },\r\n            })}\r\n            error={errors.password}\r\n          />\r\n\r\n          <Button classNames='full' type='submit'>\r\n            Login\r\n          </Button>\r\n        </form>\r\n\r\n        {/* <hr />\r\n\r\n        <GoogleLogin\r\n          clientId='320113619885-gk7d3v66vs3bf4nksn6mf3tj2s6prgcs.apps.googleusercontent.com'\r\n          buttonText='Login With Google'\r\n          onSuccess={handleGoogleAuth}\r\n          // onFailure={handleGoogleAuth}\r\n          cookiePolicy={'single_host_origin'}\r\n          render={(renderProps) => (\r\n            <button\r\n              onClick={renderProps.onClick}\r\n              style={{\r\n                padding: '15px 20px',\r\n                width: '100%',\r\n                border: 'none',\r\n                fontSize: '1.5rem',\r\n                borderRadius: '10px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <FcGoogle style={{ fontSize: '2.5rem' }} />\r\n                <span className='google__text'>Login With Google</span>\r\n              </div>\r\n            </button>\r\n          )}\r\n        /> */}\r\n      </div>\r\n\r\n      <div className='flex-sbt py-10'>\r\n        <span>Don't have an account?</span>\r\n\r\n        <Link to='/register' className='btn'>\r\n          Register\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js",[],["114","115"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js",["116"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from 'context/use-auth'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated ? <Redirect to='/login' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\utils\\setAuthToken.js",[],["117","118"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["119","120"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport './PatientListPage.css'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\n\r\nconst PatientListPage = () => {\r\n  const { user } = useAuth()\r\n  const [patients, setPatients] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentPatient, setCurrentPatient] = useState()\r\n  const [pet, setPet] = useState(null)\r\n  const [petLoading, setPetLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getPatients = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/rooms/receiver/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        // console.log('Res', res)\r\n        setPatients(res.data.room)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        toast.error('Something Went Wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getPatients()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handlePatModal = async (pat) => {\r\n    setCurrentPatient(pat)\r\n    toggleModal()\r\n    try {\r\n      setPetLoading(true)\r\n      const petRes = await client.get(`/pets/${pat.petId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n      setPet(petRes.data.exPet)\r\n      setPetLoading(false)\r\n    } catch (error) {\r\n      toast.error('Something Went Wrong! Please try again later!')\r\n      setPetLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal\r\n          toggle={toggleModal}\r\n          title={`${currentPatient.senderName} pet details`}\r\n        >\r\n          {petLoading && <LoadingSpinner asOverlay />}\r\n          {pet && (\r\n            <div className='pet__details'>\r\n              <h5>\r\n                Weight: <span>{pet.weight} Kg</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Gender: <span>{pet.gender}</span>\r\n              </h5>\r\n              <h5>\r\n                Pet Type: <span>{pet.type}</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Age:\r\n                <span>\r\n                  {pet.years !== 0 && `${pet.years} years`}\r\n                  {pet.months !== 0 && `${pet.months} months`}\r\n                </span>\r\n              </h5>\r\n\r\n              {pet.petHistoryImages.length > 0 && (\r\n                <>\r\n                  <h5>Pet History Images: </h5>\r\n                  <div className='pet__history__images'>\r\n                    {pet.petHistoryImages.map((img, i) => (\r\n                      <div key={`${img}-${i}`} className='pet__history__img'>\r\n                        <img\r\n                          src={`http://192.168.43.242:8000/${img}`}\r\n                          width='160'\r\n                          height='160'\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n      {patients.length === 0 && (\r\n        <h3 className='text-center'>\r\n          No Patients Have Contacted You, Please Comeback After Some Time!\r\n        </h3>\r\n      )}\r\n\r\n      {patients.length > 0 && (\r\n        <h3 className='text-center'>Here are your patients list:</h3>\r\n      )}\r\n      {patients.length > 0 && (\r\n        <div className='center'>\r\n          {patients.map((pat) => (\r\n            <div\r\n              key={pat._id}\r\n              className='patient__list'\r\n              onClick={() => handlePatModal(pat)}\r\n            >\r\n              <div className='patient__list__item'>\r\n                <p className='patient__list__item__img'>{pat.senderName[0]}</p>\r\n                <p className='patient__list__item__name'>{pat.senderName}</p>\r\n              </div>\r\n              <FiChevronRight style={{ fontSize: '2.5rem' }} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PatientListPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":20,"column":6,"nodeType":"127","endLine":20,"endColumn":8,"suggestions":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":18},{"ruleId":"131","severity":1,"message":"135","line":13,"column":10,"nodeType":"133","messageId":"134","endLine":13,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":52,"column":9,"nodeType":"133","messageId":"134","endLine":52,"endColumn":25},{"ruleId":"121","replacedBy":"137"},{"ruleId":"123","replacedBy":"138"},{"ruleId":"125","severity":1,"message":"139","line":45,"column":6,"nodeType":"127","endLine":45,"endColumn":17,"suggestions":"140"},{"ruleId":"131","severity":1,"message":"132","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"131","severity":1,"message":"135","line":13,"column":10,"nodeType":"133","messageId":"134","endLine":13,"endColumn":21},{"ruleId":"131","severity":1,"message":"136","line":45,"column":9,"nodeType":"133","messageId":"134","endLine":45,"endColumn":25},{"ruleId":"121","replacedBy":"141"},{"ruleId":"123","replacedBy":"142"},{"ruleId":"131","severity":1,"message":"143","line":6,"column":28,"nodeType":"133","messageId":"134","endLine":6,"endColumn":35},{"ruleId":"121","replacedBy":"144"},{"ruleId":"123","replacedBy":"145"},{"ruleId":"125","severity":1,"message":"146","line":42,"column":6,"nodeType":"127","endLine":42,"endColumn":8,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":103,"column":25,"nodeType":"150","endLine":107,"endColumn":27},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["153"],["151"],["152"],"no-unused-vars","'FcGoogle' is defined but never used.","Identifier","unusedVar","'GoogleLogin' is defined but never used.","'handleGoogleAuth' is assigned a value but never used.",["151"],["152"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["154"],["151"],["152"],"'loading' is assigned a value but never used.",["151"],["152"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [loadUser]",{"range":"162","text":"163"},"Update the dependencies array to be: [user, user._id]",{"range":"164","text":"165"},"Update the dependencies array to be: [user._id]",{"range":"166","text":"167"},[595,597],"[loadUser]",[1279,1290],"[user, user._id]",[1400,1402],"[user._id]"]