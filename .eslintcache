[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\index.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\routing\\AdminRoute.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\PendingCallPage.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\NavLinks.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\context\\use-auth.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\NotFound.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\admin\\DashBoard.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\services\\socket.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"19"},{"size":490,"mtime":1618382065765,"results":"20","hashOfConfig":"21"},{"size":508,"mtime":1616231475105,"results":"22","hashOfConfig":"21"},{"size":537,"mtime":1616389084209,"results":"23","hashOfConfig":"21"},{"size":2475,"mtime":1613560798652,"results":"24","hashOfConfig":"21"},{"size":15408,"mtime":1618390908317,"results":"25","hashOfConfig":"21"},{"size":22017,"mtime":1618390917685,"results":"26","hashOfConfig":"21"},{"size":1301,"mtime":1613472225545,"results":"27","hashOfConfig":"21"},{"size":272,"mtime":1612932227806,"results":"28","hashOfConfig":"21"},{"size":1246,"mtime":1613104033191,"results":"29","hashOfConfig":"21"},{"size":2923,"mtime":1613194297479,"results":"30","hashOfConfig":"21"},{"size":1404,"mtime":1616242085407,"results":"31","hashOfConfig":"21"},{"size":4500,"mtime":1617347962293,"results":"32","hashOfConfig":"21"},{"size":439,"mtime":1612951058953,"results":"33","hashOfConfig":"21"},{"size":5130,"mtime":1614683329388,"results":"34","hashOfConfig":"21"},{"size":6697,"mtime":1617364593373,"results":"35","hashOfConfig":"21"},{"size":5078,"mtime":1618382065870,"results":"36","hashOfConfig":"21"},{"size":248,"mtime":1618554634208,"results":"37","hashOfConfig":"21"},{"size":235,"mtime":1613037914716,"results":"38","hashOfConfig":"21"},{"size":322,"mtime":1612933214649,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ihh171",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\index.js",[],["81","82"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\routing\\AdminRoute.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js",["83"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport toast from 'react-hot-toast'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Button from 'components/shared/Forms/Button'\r\nimport PasswordInput from 'components/shared/Forms/PasswordInput'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\n\r\nimport client from 'services/client'\r\n\r\nconst ResetPasswordPage = () => {\r\n  const { handleSubmit, register, errors, watch } = useForm()\r\n  const pass = useRef()\r\n  pass.current = watch('password', '')\r\n  const history = useHistory()\r\n  const params = useParams()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const onSubmit = async ({ password }) => {\r\n    try {\r\n      setLoading(true)\r\n      await client.post(`/auth/resetpassword/${params.token}`, { password })\r\n      setLoading(false)\r\n      toast.success('Password Reset Success! Please login')\r\n      setTimeout(() => {\r\n        history.replace('/login')\r\n      }, 2000)\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast.error(\r\n        error.response?.data.msg || 'Something Went Wrong, Please try again!'\r\n      )\r\n      setTimeout(() => {\r\n        history.replace('/login')\r\n      }, 2000)\r\n    }\r\n  }\r\n  return (\r\n    <div className='center'>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      <div className='form__wrapper'>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-center'>Reset Your Password</h2>\r\n\r\n          <PasswordInput\r\n            label='Password'\r\n            name='password'\r\n            placeholder='********'\r\n            myRef={register({\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 8,\r\n                message: 'Password must be atleast 8 characters long',\r\n              },\r\n            })}\r\n            error={errors.password}\r\n          />\r\n          <PasswordInput\r\n            label='Repeat Password'\r\n            name='repeatpassword'\r\n            placeholder='********'\r\n            myRef={register({\r\n              validate: (value) =>\r\n                value === pass.current || 'The passwords do not match',\r\n            })}\r\n            error={errors.repeatpassword}\r\n          />\r\n\r\n          <Button classNames='full' type='submit'>\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["84","85"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\nimport { FiMessageCircle, FiVideo } from 'react-icons/fi'\r\n\r\nimport './PatientListPage.css'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PatientListPage = () => {\r\n  const { user } = useAuth()\r\n  const [patients, setPatients] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentPatient, setCurrentPatient] = useState()\r\n  const [pet, setPet] = useState(null)\r\n  const [currentProblem, setCurrentProblem] = useState(null)\r\n  const [previousProblem, setPreviousProblem] = useState(null)\r\n  const [petLoading, setPetLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getPatients = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/rooms/receiver/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        // console.log('Res', res)\r\n        setPatients(res.data.room)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        toast.error('Something Went Wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getPatients()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handlePatModal = async (pat) => {\r\n    setCurrentPatient(pat)\r\n    toggleModal()\r\n    try {\r\n      setPetLoading(true)\r\n      const petRes = await client.get(`/pets/${pat.petId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n      // console.log('PET', petRes)\r\n      setPet(petRes.data.exPet)\r\n      if (petRes.data.exPet.problems?.length > 0) {\r\n        const allProb = petRes.data.exPet.problems.reverse()\r\n        const curProbIndex = allProb.findIndex(\r\n          (prob) => prob.docname === user.name\r\n        )\r\n        if (curProbIndex !== -1) {\r\n          const cur = allProb[curProbIndex]\r\n          setCurrentProblem(cur)\r\n          allProb.splice(curProbIndex, 1)\r\n          setPreviousProblem(allProb)\r\n        } else {\r\n          setPreviousProblem(allProb)\r\n        }\r\n      }\r\n      setPetLoading(false)\r\n    } catch (error) {\r\n      toast.error('Something Went Wrong! Please try again later!')\r\n      setPetLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal\r\n          toggle={toggleModal}\r\n          title={`${currentPatient.senderName}'s Pet Details`}\r\n        >\r\n          <div className='chat-video_wrapper flex-center'>\r\n            {/* <Link\r\n              to={`/video-call/${currentPatient.name}`}\r\n              className='btn flex-center'\r\n            >\r\n              <FiVideo className='icon' />\r\n              Video Call\r\n            </Link> */}\r\n            <Link\r\n              to={{\r\n                pathname: `/chat/${currentPatient.name}`,\r\n                state: { data: currentPatient },\r\n              }}\r\n              className='btn flex-center'\r\n            >\r\n              <FiMessageCircle className='icon' />\r\n              Chat\r\n            </Link>\r\n          </div>\r\n          {petLoading && <LoadingSpinner asOverlay />}\r\n          {pet && (\r\n            <div className='pet__details'>\r\n              <h5>\r\n                Date: <span>{new Date(pet.createdAt).toLocaleString()}</span>\r\n              </h5>\r\n              <h5>\r\n                Weight: <span>{pet.weight} Kg</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Gender: <span>{pet.gender}</span>\r\n              </h5>\r\n              <h5>\r\n                Species: <span>{pet.type}</span>\r\n              </h5>\r\n              <h5>\r\n                Breed: <span>{pet.breed}</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Age:\r\n                <span>\r\n                  {pet.years !== 0 && `${pet.years} Years`}{' '}\r\n                  {pet.months !== 0 && `${pet.months} Months`}\r\n                </span>\r\n              </h5>\r\n\r\n              {pet?.petHistoryImages?.length > 0 && (\r\n                <>\r\n                  <h5>Pet History Images: </h5>\r\n                  <div className='pet__history__images'>\r\n                    {pet.petHistoryImages.map((img, i) => (\r\n                      <div key={`${img}-${i}`} className='pet__history__img'>\r\n                        {/* <img\r\n                          src={`http://192.168.43.242:8000/img/${img}`}\r\n                          width='200'\r\n                          height='200'\r\n                          alt={`${pet.type}`}\r\n                        /> */}\r\n                        <img\r\n                          src={`${img}`}\r\n                          width='200'\r\n                          height='200'\r\n                          style={{ objectFit: 'cover' }}\r\n                          alt={`${pet.type}`}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {pet?.prescriptions?.length > 0 && <h5>Pet Prescriptions:</h5>}\r\n              {pet?.prescriptions?.length > 0 &&\r\n                pet.prescriptions.map((pr, i) => (\r\n                  <div className='py-10' key={pr._id}>\r\n                    <h5>\r\n                      {i + 1}. Prescription: <span>{pr.prescription}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Doctor's Name: <span>{pr.docname}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Date: <span>{new Date(pr.date).toLocaleString()}</span>\r\n                    </h5>\r\n                    {pr.img && (\r\n                      <>\r\n                        <h5>Prescription image</h5>\r\n                        <div className='pet__history__img'>\r\n                          {/* <img\r\n                            src={`http://192.168.43.242:8000/${pr.img}`}\r\n                            width='200'\r\n                            height='200'\r\n                            style={{ maxHeight: '200px', maxWidth: '200px' }}\r\n                            alt={`${pet.type}`}\r\n                          /> */}\r\n                          <img\r\n                            src={`${pr.img}`}\r\n                            width='200'\r\n                            height='200'\r\n                            style={{\r\n                              maxHeight: '200px',\r\n                              maxWidth: '200px',\r\n                              objectFit: 'cover',\r\n                            }}\r\n                            alt={`${pet.type}`}\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n\r\n              {currentProblem && <h5>Current Pet Problem: </h5>}\r\n              {currentProblem && (\r\n                <div className='pet__problems py-10'>\r\n                  <h5>\r\n                    Problem: <span>{currentProblem.problem}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Doctor's Name: <span>{currentProblem.docname}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Time Period: <span>{currentProblem.time}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Appetite: <span>{currentProblem.Appetite}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Behaviour: <span>{currentProblem.Behaviour}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Eyes: <span>{currentProblem.Eyes}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Comment: <span>{currentProblem.comment}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Gait: <span>{currentProblem.Gait}</span>\r\n                  </h5>\r\n                  <h5>\r\n                    Mucous: <span>{currentProblem.Mucous}</span>\r\n                  </h5>\r\n\r\n                  {currentProblem.Ears?.length > 0 && <h5>Ears: </h5>}\r\n\r\n                  {currentProblem.Ears?.length > 0 &&\r\n                    currentProblem.Ears.map((er, i) => (\r\n                      <h3 key={`${i}-Ears`}> {er}</h3>\r\n                    ))}\r\n\r\n                  {currentProblem.Feces?.length > 0 && <h5>Faces: </h5>}\r\n\r\n                  {currentProblem.Feces?.length > 0 &&\r\n                    currentProblem.Feces.map((fc, i) => (\r\n                      <h3 key={`Feces ${i}`}> {fc}</h3>\r\n                    ))}\r\n                  {currentProblem.Urine?.length > 0 && <h5>Urines: </h5>}\r\n\r\n                  {currentProblem.Urine?.length > 0 &&\r\n                    currentProblem.Urine.map((ur, i) => (\r\n                      <h3 key={`Urines ${i}`}> {ur}</h3>\r\n                    ))}\r\n                  {currentProblem.Skin?.length > 0 && <h5>Skins: </h5>}\r\n\r\n                  {currentProblem.Skin?.length > 0 &&\r\n                    currentProblem.Skin.map((sk, i) => (\r\n                      <h3 key={`Skins ${i}`}> {sk}</h3>\r\n                    ))}\r\n\r\n                  {currentProblem?.images?.length && <h5>Pet Problem image</h5>}\r\n                  <div className='pet__history__images'>\r\n                    {currentProblem?.images?.length > 0 &&\r\n                      currentProblem.images.map((img, i) => (\r\n                        <div key={`${img}-${i}`} className='pet__history__img'>\r\n                          {/* <img\r\n                              src={`http://192.168.43.242:8000/${img}`}\r\n                              width='200'\r\n                              height='200'\r\n                              style={{ maxHeight: '200px', maxWidth: '200px' }}\r\n                              alt={`${pet.type}`}\r\n                            /> */}\r\n                          <img\r\n                            src={`${img}`}\r\n                            width='200'\r\n                            height='200'\r\n                            style={{\r\n                              maxHeight: '200px',\r\n                              maxWidth: '200px',\r\n                              objectFit: 'cover',\r\n                            }}\r\n                            alt={`${pet.type}`}\r\n                          />\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                  <hr />\r\n                </div>\r\n              )}\r\n\r\n              {previousProblem?.length > 0 && <h5>Previous Pet Problems: </h5>}\r\n              {previousProblem?.length > 0 &&\r\n                previousProblem.map((pb, i) => (\r\n                  <div className='pet__problems py-10' key={pb._id}>\r\n                    <h5>\r\n                      {i + 1}. Problem: <span>{pb.problem}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Doctor's Name: <span>{pb.docname}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Time Period: <span>{pb.time}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Appetite: <span>{pb.Appetite}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Behaviour: <span>{pb.Behaviour}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Eyes: <span>{pb.Eyes}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Comment: <span>{pb.comment}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Gait: <span>{pb.Gait}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Mucous: <span>{pb.Mucous}</span>\r\n                    </h5>\r\n\r\n                    {pb.Ears?.length > 0 && <h5>Ears: </h5>}\r\n\r\n                    {pb.Ears?.length > 0 &&\r\n                      pb.Ears.map((er, i) => <h3 key={`${i}-Ears`}> {er}</h3>)}\r\n\r\n                    {pb.Feces?.length > 0 && <h5>Faces: </h5>}\r\n\r\n                    {pb.Feces?.length > 0 &&\r\n                      pb.Feces.map((fc, i) => (\r\n                        <h3 key={`Feces ${i}`}> {fc}</h3>\r\n                      ))}\r\n                    {pb.Urine?.length > 0 && <h5>Urines: </h5>}\r\n\r\n                    {pb.Urine?.length > 0 &&\r\n                      pb.Urine.map((ur, i) => (\r\n                        <h3 key={`Urines ${i}`}> {ur}</h3>\r\n                      ))}\r\n                    {pb.Skin?.length > 0 && <h5>Skins: </h5>}\r\n\r\n                    {pb.Skin?.length > 0 &&\r\n                      pb.Skin.map((sk, i) => <h3 key={`Skins ${i}`}> {sk}</h3>)}\r\n\r\n                    {pb?.images?.length && <h5>Pet Problem image</h5>}\r\n                    <div className='pet__history__images'>\r\n                      {pb?.images?.length > 0 &&\r\n                        pb.images.map((img, i) => (\r\n                          <div\r\n                            key={`${img}-${i}`}\r\n                            className='pet__history__img'\r\n                          >\r\n                            {/* <img\r\n                              src={`http://192.168.43.242:8000/${img}`}\r\n                              width='200'\r\n                              height='200'\r\n                              style={{ maxHeight: '200px', maxWidth: '200px' }}\r\n                              alt={`${pet.type}`}\r\n                            /> */}\r\n                            <img\r\n                              src={`${img}`}\r\n                              width='200'\r\n                              height='200'\r\n                              style={{\r\n                                maxHeight: '200px',\r\n                                maxWidth: '200px',\r\n                                objectFit: 'cover',\r\n                              }}\r\n                              alt={`${pet.type}`}\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n      {patients.length === 0 && (\r\n        <h3 className='text-center'>\r\n          No Patients Have Contacted You, Please Comeback After Some Time!\r\n        </h3>\r\n      )}\r\n\r\n      {patients.length > 0 && <h3 className='text-center'>Patients List:</h3>}\r\n      {patients.length > 0 && (\r\n        <div className='pat__grid center'>\r\n          {patients.map((pat) => (\r\n            <div\r\n              key={pat._id}\r\n              className='patient__list'\r\n              onClick={() => handlePatModal(pat)}\r\n            >\r\n              <div className='patient__list__item'>\r\n                <p className='patient__list__item__img'>{pat.senderName[0]}</p>\r\n                <p className='patient__list__item__name'>{pat.senderName}</p>\r\n              </div>\r\n              <FiChevronRight style={{ fontSize: '2.5rem' }} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PatientListPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\PendingCallPage.js",["86","87"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["88","89","90","91","92"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\NavLinks.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\NotFound.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js",["93","94"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\admin\\DashBoard.js",["95","96"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js",["97","98"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\services\\socket.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Vet\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"103","severity":1,"message":"107","line":5,"column":27,"nodeType":"105","messageId":"106","endLine":5,"endColumn":34},{"ruleId":"108","severity":1,"message":"109","line":46,"column":6,"nodeType":"110","endLine":46,"endColumn":8,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":58,"column":6,"nodeType":"110","endLine":58,"endColumn":8,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":68,"column":13,"nodeType":"105","messageId":"106","endLine":68,"endColumn":17},{"ruleId":"103","severity":1,"message":"115","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":14},{"ruleId":"103","severity":1,"message":"116","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":15},{"ruleId":"103","severity":1,"message":"117","line":4,"column":17,"nodeType":"105","messageId":"106","endLine":4,"endColumn":25},{"ruleId":"103","severity":1,"message":"118","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":19},{"ruleId":"103","severity":1,"message":"119","line":9,"column":21,"nodeType":"105","messageId":"106","endLine":9,"endColumn":33},{"ruleId":"103","severity":1,"message":"120","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":16},{"ruleId":"108","severity":1,"message":"121","line":67,"column":6,"nodeType":"110","endLine":67,"endColumn":8,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":56,"column":5,"nodeType":"110","endLine":56,"endColumn":7,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":185,"column":19,"nodeType":"127","endLine":185,"endColumn":34},{"ruleId":"108","severity":1,"message":"109","line":64,"column":6,"nodeType":"110","endLine":64,"endColumn":8,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"129","line":79,"column":13,"nodeType":"105","messageId":"106","endLine":79,"endColumn":19},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'FiVideo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'getUserPendingCalls'. Either include it or remove the dependency array.",["133"],"'pres' is assigned a value but never used.","'Button' is defined but never used.","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.","'nanoid' is defined but never used.","React Hook useEffect has missing dependencies: 'petId' and 'roomName'. Either include them or remove the dependency array.",["134"],"React Hook useMemo has a missing dependency: 'handleShowDoctor'. Either include it or remove the dependency array.",["135"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["136"],"'schRes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"137","fix":"145"},"Update the dependencies array to be: [user._id]",{"range":"146","text":"147"},"Update the dependencies array to be: [getUserPendingCalls]",{"range":"148","text":"149"},"Update the dependencies array to be: [petId, roomName]",{"range":"150","text":"151"},"Update the dependencies array to be: [handleShowDoctor]",{"range":"152","text":"153"},{"range":"154","text":"147"},[1626,1628],"[user._id]",[1989,1991],"[getUserPendingCalls]",[2137,2139],"[petId, roomName]",[1646,1648],"[handleShowDoctor]",[2056,2058]]