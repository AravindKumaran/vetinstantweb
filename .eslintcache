[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js":"19","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js":"20","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js":"21","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js":"22","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js":"23","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js":"24","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js":"25","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js":"26","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js":"27"},{"size":11134,"mtime":1615267165852,"results":"28","hashOfConfig":"29"},{"size":469,"mtime":1612935527724,"results":"30","hashOfConfig":"29"},{"size":3954,"mtime":1614841801678,"results":"31","hashOfConfig":"29"},{"size":4355,"mtime":1614841813360,"results":"32","hashOfConfig":"29"},{"size":4394,"mtime":1613131068038,"results":"33","hashOfConfig":"29"},{"size":465,"mtime":1613475664031,"results":"34","hashOfConfig":"29"},{"size":235,"mtime":1613037914716,"results":"35","hashOfConfig":"29"},{"size":322,"mtime":1612933214649,"results":"36","hashOfConfig":"29"},{"size":272,"mtime":1612932227806,"results":"37","hashOfConfig":"29"},{"size":637,"mtime":1613027629282,"results":"38","hashOfConfig":"29"},{"size":2923,"mtime":1613194297479,"results":"39","hashOfConfig":"29"},{"size":242,"mtime":1615267239623,"results":"40","hashOfConfig":"29"},{"size":5410,"mtime":1615210838655,"results":"41","hashOfConfig":"29"},{"size":362,"mtime":1606886196678,"results":"42","hashOfConfig":"29"},{"size":1950,"mtime":1613560487490,"results":"43","hashOfConfig":"29"},{"size":5130,"mtime":1614683329388,"results":"44","hashOfConfig":"29"},{"size":202,"mtime":1615267235028,"results":"45","hashOfConfig":"29"},{"size":4837,"mtime":1614943784929,"results":"46","hashOfConfig":"29"},{"size":688,"mtime":1612953030861,"results":"47","hashOfConfig":"29"},{"size":1301,"mtime":1613472225545,"results":"48","hashOfConfig":"29"},{"size":1089,"mtime":1614675878318,"results":"49","hashOfConfig":"29"},{"size":4475,"mtime":1614862569061,"results":"50","hashOfConfig":"29"},{"size":2067,"mtime":1613131046059,"results":"51","hashOfConfig":"29"},{"size":278,"mtime":1613027244048,"results":"52","hashOfConfig":"29"},{"size":439,"mtime":1612951058953,"results":"53","hashOfConfig":"29"},{"size":1623,"mtime":1613128972583,"results":"54","hashOfConfig":"29"},{"size":10688,"mtime":1614862569060,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1iylv84",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["115"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],["116","117"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js",["118"],"import React, { useEffect, useState } from 'react'\r\nimport * as Yup from 'yup'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { useAuth } from 'context/use-auth'\r\nimport toast from 'react-hot-toast'\r\nimport Layout from 'components/layouts/Layout'\r\n\r\nimport './PrescriptionPage.css'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport Select from 'components/shared/Forms/Select'\r\nimport Input from 'components/shared/Forms/Input'\r\nimport Button from 'components/shared/Forms/Button'\r\nimport client from 'services/client'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  patientName: Yup.string()\r\n    .required('Please select a patient')\r\n    .label('Patient Name'),\r\n  prescription: Yup.string().max(300).required().label('Prescription'),\r\n  photo: Yup.mixed()\r\n    .test(\r\n      'imageSize',\r\n      'Please select a .jpeg/.jpg image of size less than 1 Mb',\r\n      (value) => {\r\n        if (value && value[0].type !== 'image/jpeg') {\r\n          return false\r\n        }\r\n        return value && value[0].size <= 1000000\r\n      }\r\n    )\r\n    .label('Image'),\r\n})\r\n\r\nconst PrescriptionPage = () => {\r\n  const { handleSubmit, register, errors } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  })\r\n\r\n  const { user } = useAuth()\r\n  const [patients, setPatients] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getPatients = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/rooms/receiver/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        let pateintss = res.data.room\r\n        let newPatients = pateintss.reduce((acc, item) => {\r\n          acc.push({\r\n            label:\r\n              item.senderName.charAt(0).toUpperCase() +\r\n              item.senderName.slice(1),\r\n            value: item.petId,\r\n          })\r\n          return acc\r\n        }, [])\r\n        setPatients(newPatients)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        toast.error('Something Went Wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getPatients()\r\n  }, [])\r\n\r\n  const onSubmit = async (data) => {\r\n    const formData = new FormData()\r\n    if (data.photo[0]) {\r\n      formData.append('photo', data.photo[0])\r\n    }\r\n    formData.append('prescription', data.prescription)\r\n    formData.append('docname', user.name)\r\n    for (var key of formData.entries()) {\r\n      console.log(key[0] + ', ' + key[1])\r\n    }\r\n\r\n    try {\r\n      setLoading(true)\r\n      const petRes = await client.patch(\r\n        `/pets/prescription/${data.patientName}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      )\r\n      console.log('PetRes', petRes)\r\n      toast.success('Prescription Send Successfully!')\r\n      setLoading(false)\r\n    } catch (error) {\r\n      console.log('Error', error)\r\n      toast.error('Something Went Wrong! Please try again later!')\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className='center'>\r\n        {loading && <LoadingSpinner asOverlay />}\r\n        <div className='prescription'>\r\n          <h3 className='text-center'> Please Provide Your Prescription </h3>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Select\r\n              label='Select Patient Name'\r\n              data={patients}\r\n              name='patientName'\r\n              myRef={register}\r\n              error={errors.patientName}\r\n            />\r\n            <Input\r\n              label='Prescription'\r\n              placeholder='Enter your prescription'\r\n              element='textarea'\r\n              rows={5}\r\n              name='prescription'\r\n              myRef={register}\r\n              error={errors.prescription}\r\n            />\r\n            <Input\r\n              type='file'\r\n              label='Select image'\r\n              name='photo'\r\n              myRef={register}\r\n              error={errors.photo}\r\n            />\r\n            <Button classNames='full' type='submit'>\r\n              Send Prescription\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PrescriptionPage\r\n",["119","120"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["121","122","123","124","125"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["126","127"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js",["128","129"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js",["130","131"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport './CallLogPage.css'\r\nimport client from 'services/client'\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport CallLogCard from 'components/layouts/CallLogCard'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport DateTimeInput from 'components/layouts/DateTimeInput'\r\nimport Button from 'components/shared/Forms/Button'\r\n\r\nconst CallLogPage = () => {\r\n  const { user } = useAuth()\r\n  const [missedCall, setMissedCall] = useState([])\r\n  const [completedCall, setCompletedCall] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentCall, setCurrentCall] = useState()\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [startTime, setStartTime] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const getMissedCall = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/calllogs?receiverId=${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n\r\n        const callLogsArray = res.data.callLogs\r\n        callLogsArray.forEach((log) => {\r\n          if (log.callPending) {\r\n            setMissedCall((prevLog) => [...prevLog, log])\r\n          } else {\r\n            setCompletedCall((prevLog) => [...prevLog, log])\r\n          }\r\n        })\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setLoading(false)\r\n        toast.error(\r\n          error.response.data?.msg ||\r\n            'Something Went Wrong! Please try again later!'\r\n        )\r\n      }\r\n    }\r\n\r\n    getMissedCall()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handleScheduleCall = (call) => {\r\n    toggleModal()\r\n    setCurrentCall(call)\r\n  }\r\n\r\n  const handleScheduleBtn = async () => {\r\n    startDate.setTime(startTime.getTime())\r\n    setLoading(true)\r\n    try {\r\n      const schRes = await client.post(\r\n        '/scheduledCalls',\r\n        {\r\n          date: startDate,\r\n          userId: currentCall.senderId._id,\r\n          doctorId: currentCall.receiverId._id,\r\n          doctorName: currentCall.receiverId.name,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      )\r\n\r\n      setLoading(false)\r\n      toast.success('Your Call has been schedule')\r\n      window.location.href = '/'\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast.error(\r\n        error.response.data?.msg ||\r\n          'Something Went Wrong! Please try again later!'\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal toggle={toggleModal} title='Schedule Call'>\r\n          <div className='sch__modal'>\r\n            <h4>Select Time</h4>\r\n            <DatePicker\r\n              selected={startTime}\r\n              onChange={(date) => setStartTime(date)}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              timeIntervals={15}\r\n              timeCaption='Time'\r\n              dateFormat='h:mm aa'\r\n              customInput={<DateTimeInput time={true} />}\r\n            />\r\n            \r\n            <h4>Choose Date</h4>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              minDate={new Date()}\r\n              customInput={<DateTimeInput />}\r\n            />\r\n          </div>\r\n          <Button onClick={handleScheduleBtn} classNames='btn__sch'>\r\n            Schedule\r\n          </Button>\r\n        </Modal>\r\n      )}\r\n      <div className='call-log__container'>\r\n        <div className='missed__call call__common'>\r\n          <h2 className='text-center'>Missed Calls</h2>\r\n          {missedCall.length > 0 ? (\r\n            <CallLogCard\r\n              callLogs={missedCall}\r\n              isSchedule={true}\r\n              onSchedule={handleScheduleCall}\r\n            />\r\n          ) : (\r\n            <h4 className='text-center'>No Missed Calls</h4>\r\n          )}\r\n        </div>\r\n        <div className='completed__call call__common'>\r\n          <h2 className='text-center'>Completed Calls</h2>\r\n          {completedCall.length > 0 ? (\r\n            <CallLogCard callLogs={completedCall} />\r\n          ) : (\r\n            <h4 className='text-center'>No Completed Calls</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CallLogPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js",[],["132","133"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js",["134"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js",[],{"ruleId":"135","severity":1,"message":"136","line":44,"column":6,"nodeType":"137","endLine":44,"endColumn":8,"suggestions":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"135","severity":1,"message":"136","line":72,"column":6,"nodeType":"137","endLine":72,"endColumn":8,"suggestions":"143"},{"ruleId":"139","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":14},{"ruleId":"146","severity":1,"message":"150","line":4,"column":10,"nodeType":"148","messageId":"149","endLine":4,"endColumn":15},{"ruleId":"146","severity":1,"message":"151","line":4,"column":17,"nodeType":"148","messageId":"149","endLine":4,"endColumn":25},{"ruleId":"146","severity":1,"message":"152","line":9,"column":10,"nodeType":"148","messageId":"149","endLine":9,"endColumn":19},{"ruleId":"146","severity":1,"message":"153","line":9,"column":21,"nodeType":"148","messageId":"149","endLine":9,"endColumn":33},{"ruleId":"135","severity":1,"message":"154","line":105,"column":6,"nodeType":"137","endLine":105,"endColumn":17,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":164,"column":15,"nodeType":"158","endLine":164,"endColumn":30},{"ruleId":"146","severity":1,"message":"159","line":12,"column":10,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"135","severity":1,"message":"160","line":67,"column":6,"nodeType":"137","endLine":67,"endColumn":8,"suggestions":"161"},{"ruleId":"135","severity":1,"message":"136","line":58,"column":6,"nodeType":"137","endLine":58,"endColumn":8,"suggestions":"162"},{"ruleId":"146","severity":1,"message":"163","line":73,"column":13,"nodeType":"148","messageId":"149","endLine":73,"endColumn":19},{"ruleId":"139","replacedBy":"164"},{"ruleId":"141","replacedBy":"165"},{"ruleId":"135","severity":1,"message":"166","line":42,"column":6,"nodeType":"137","endLine":42,"endColumn":17,"suggestions":"167"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["171"],["169"],["170"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["172"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'nanoid' is defined but never used.","React Hook useEffect has missing dependencies: 'petId' and 'roomName'. Either include them or remove the dependency array.",["173"],["174"],"'schRes' is assigned a value but never used.",["169"],["170"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["175"],{"desc":"176","fix":"177"},"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"176","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [user._id]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [user, user._id]",{"range":"189","text":"190"},"Update the dependencies array to be: [petId, roomName]",{"range":"191","text":"192"},{"range":"193","text":"187"},"Update the dependencies array to be: [params.id, user.name]",{"range":"194","text":"195"},[1500,1502],"[user._id]",[2277,2279],[3072,3083],"[user, user._id]",[2137,2139],"[petId, roomName]",[1955,1957],[1254,1265],"[params.id, user.name]"]