[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"19","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js":"20","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"21","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"22","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js":"23","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js":"24"},{"size":362,"mtime":1606886196678,"results":"25","hashOfConfig":"26"},{"size":235,"mtime":1613037914716,"results":"27","hashOfConfig":"26"},{"size":1301,"mtime":1613472225545,"results":"28","hashOfConfig":"26"},{"size":322,"mtime":1612933214649,"results":"29","hashOfConfig":"26"},{"size":688,"mtime":1612953030861,"results":"30","hashOfConfig":"26"},{"size":2923,"mtime":1613194297479,"results":"31","hashOfConfig":"26"},{"size":5130,"mtime":1614683329388,"results":"32","hashOfConfig":"26"},{"size":1791,"mtime":1613559586588,"results":"33","hashOfConfig":"26"},{"size":202,"mtime":1614748973574,"results":"34","hashOfConfig":"26"},{"size":248,"mtime":1614748971812,"results":"35","hashOfConfig":"26"},{"size":10688,"mtime":1614749662037,"results":"36","hashOfConfig":"26"},{"size":1089,"mtime":1614675878318,"results":"37","hashOfConfig":"26"},{"size":443,"mtime":1612936776068,"results":"38","hashOfConfig":"26"},{"size":2475,"mtime":1613560798652,"results":"39","hashOfConfig":"26"},{"size":9295,"mtime":1614675878348,"results":"40","hashOfConfig":"26"},{"size":4825,"mtime":1613477925799,"results":"41","hashOfConfig":"26"},{"size":465,"mtime":1613475664031,"results":"42","hashOfConfig":"26"},{"size":2067,"mtime":1613131046059,"results":"43","hashOfConfig":"26"},{"size":272,"mtime":1612932227806,"results":"44","hashOfConfig":"26"},{"size":278,"mtime":1613027244048,"results":"45","hashOfConfig":"26"},{"size":3954,"mtime":1613561530110,"results":"46","hashOfConfig":"26"},{"size":3369,"mtime":1614749762121,"results":"47","hashOfConfig":"26"},{"size":1950,"mtime":1613560487490,"results":"48","hashOfConfig":"26"},{"size":969,"mtime":1612933219433,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iylv84",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js",[],["103","104"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["105","106","107","108","109"],"import Button from 'components/shared/Forms/Button'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport { FiMic, FiMicOff } from 'react-icons/fi'\r\n\r\nconst Participant = ({ participant }) => {\r\n  const [videoTracks, setVideoTracks] = useState([])\r\n  const [audioTracks, setAudioTracks] = useState([])\r\n  const [muteAudio, setMuteAudio] = useState(true)\r\n\r\n  const videoRef = useRef()\r\n  const audioRef = useRef()\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null)\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks))\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks))\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === 'video') {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track])\r\n      } else if (track.kind === 'audio') {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track])\r\n      }\r\n    }\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === 'video') {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track))\r\n      } else if (track.kind === 'audio') {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track))\r\n      }\r\n    }\r\n\r\n    participant.on('trackSubscribed', trackSubscribed)\r\n    participant.on('trackUnsubscribed', trackUnsubscribed)\r\n\r\n    return () => {\r\n      setVideoTracks([])\r\n      setAudioTracks([])\r\n      participant.removeAllListeners()\r\n    }\r\n  }, [participant])\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0]\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current)\r\n      return () => {\r\n        videoTrack.detach()\r\n      }\r\n    }\r\n  }, [videoTracks])\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0]\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current)\r\n      return () => {\r\n        audioTrack.detach()\r\n      }\r\n    }\r\n  }, [audioTracks])\r\n\r\n  // const handleMuteAudio = () => {\r\n  //   setMuteAudio(!muteAudio)\r\n  //   console.log('Muting')\r\n  //   if (videoRef.current) {\r\n  //     videoRef.current.muted = muteAudio\r\n  //     videoRef.current.defaultMuted = muteAudio\r\n  //   }\r\n  //   console.log(videoRef.current)\r\n  // }\r\n\r\n  return (\r\n    <div className='participant'>\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <h3>{participant.identity}</h3>\r\n        <video ref={videoRef} autoPlay={true} />\r\n        <audio ref={audioRef} autoPlay={true} />\r\n        {/* <audio ref={audioRef} autoPlay={true} muted={muteAudio} /> */}\r\n        {/* <div onClick={handleMuteAudio}>\r\n          {muteAudio ? (\r\n            <FiMic className='call-icons' />\r\n          ) : (\r\n            <FiMicOff className='call-icons' />\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Participant\r\n",["110","111"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js",["112","113"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js",["114"],"import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Toaster } from 'react-hot-toast'\nimport { useAuth } from 'context/use-auth'\nimport PrivateRoute from 'routing/PrivateRoute'\n\nimport LoginPage from 'pages/auth/LoginPage'\nimport RegisterPage from 'pages/auth/RegisterPage'\nimport HomePage from 'pages/doctor/HomePage'\nimport PatientListPage from 'pages/doctor/PatientListPage'\nimport NotFound from 'pages/NotFound'\nimport PrescriptionPage from 'pages/doctor/PrescriptionPage'\nimport VideoCallPage from 'pages/doctor/VideoCallPage'\nimport ChatPage from 'pages/doctor/ChatPage'\nimport CallLogPage from 'pages/doctor/CallLogPage'\nimport ForgotPasswordPage from 'pages/auth/ForgotPasswordPage'\nimport ResetPasswordPage from 'pages/auth/ResetPasswordPage'\n\nconst App = () => {\n  const { loadUser } = useAuth()\n\n  useEffect(() => {\n    if (localStorage.token) {\n      loadUser()\n    }\n  }, [])\n\n  return (\n    <>\n      <Toaster />\n      <Switch>\n        <PrivateRoute exact path='/' component={HomePage} />\n        <PrivateRoute exact path='/patientList' component={PatientListPage} />\n        <PrivateRoute exact path='/prescription' component={PrescriptionPage} />\n        <PrivateRoute exact path='/video-call/:id' component={VideoCallPage} />\n        <PrivateRoute exact path='/chat/:id' component={ChatPage} />\n        <PrivateRoute exact path='/call-log' component={CallLogPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/login' component={LoginPage} />\n        <Route path='/forgotPassword' component={ForgotPasswordPage} />\n        <Route path='/passwordreset/:token' component={ResetPasswordPage} />\n        <Route path='/*' component={NotFound} />\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js",["115"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js",["116"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["117"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js",["118","119"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport './CallLogPage.css'\r\nimport client from 'services/client'\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport CallLogCard from 'components/layouts/CallLogCard'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\n\r\nimport DatePicker from 'react-datepicker'\r\nimport DateTimeInput from 'components/layouts/DateTimeInput'\r\nimport Button from 'components/shared/Forms/Button'\r\n\r\nconst CallLogPage = () => {\r\n  const { user } = useAuth()\r\n  const [missedCall, setMissedCall] = useState([])\r\n  const [completedCall, setCompletedCall] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentCall, setCurrentCall] = useState()\r\n  const [startDate, setStartDate] = useState(new Date())\r\n  const [startTime, setStartTime] = useState(new Date())\r\n\r\n  useEffect(() => {\r\n    const getMissedCall = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/calllogs?receiverId=${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n\r\n        const callLogsArray = res.data.callLogs\r\n        callLogsArray.forEach((log) => {\r\n          if (log.callPending) {\r\n            setMissedCall((prevLog) => [...prevLog, log])\r\n          } else {\r\n            setCompletedCall((prevLog) => [...prevLog, log])\r\n          }\r\n        })\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setLoading(false)\r\n        toast.error(\r\n          error.response.data?.msg ||\r\n            'Something Went Wrong! Please try again later!'\r\n        )\r\n      }\r\n    }\r\n\r\n    getMissedCall()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handleScheduleCall = (call) => {\r\n    toggleModal()\r\n    setCurrentCall(call)\r\n  }\r\n\r\n  const handleScheduleBtn = async () => {\r\n    startDate.setTime(startTime.getTime())\r\n    setLoading(true)\r\n    try {\r\n      const schRes = await client.post(\r\n        '/scheduledCalls',\r\n        {\r\n          date: startDate,\r\n          userId: currentCall.senderId._id,\r\n          doctorId: currentCall.receiverId._id,\r\n          doctorName: currentCall.receiverId.name,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      )\r\n\r\n      setLoading(false)\r\n      toast.success('Your Call has been schedule')\r\n      window.location.href = '/'\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast.error(\r\n        error.response.data?.msg ||\r\n          'Something Went Wrong! Please try again later!'\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal toggle={toggleModal} title='Schedule Call'>\r\n          <div className='sch__modal'>\r\n            <h4>Select Time</h4>\r\n            <DatePicker\r\n              selected={startTime}\r\n              onChange={(date) => setStartTime(date)}\r\n              showTimeSelect\r\n              showTimeSelectOnly\r\n              timeIntervals={15}\r\n              timeCaption='Time'\r\n              dateFormat='h:mm aa'\r\n              customInput={<DateTimeInput time={true} />}\r\n            />\r\n\r\n            <h4>Choose Date</h4>\r\n            <DatePicker\r\n              selected={startDate}\r\n              onChange={(date) => setStartDate(date)}\r\n              minDate={new Date()}\r\n              customInput={<DateTimeInput />}\r\n            />\r\n          </div>\r\n          <Button onClick={handleScheduleBtn} classNames='btn__sch'>\r\n            Schedule\r\n          </Button>\r\n        </Modal>\r\n      )}\r\n      <div className='call-log__container'>\r\n        <div className='missed__call call__common'>\r\n          <h2 className='text-center'>Missed Calls</h2>\r\n          {missedCall.length > 0 ? (\r\n            <CallLogCard\r\n              callLogs={missedCall}\r\n              isSchedule={true}\r\n              onSchedule={handleScheduleCall}\r\n            />\r\n          ) : (\r\n            <h4 className='text-center'>No Missed Calls</h4>\r\n          )}\r\n        </div>\r\n        <div className='completed__call call__common'>\r\n          <h2 className='text-center'>Completed Calls</h2>\r\n          {completedCall.length > 0 ? (\r\n            <CallLogCard callLogs={completedCall} />\r\n          ) : (\r\n            <h4 className='text-center'>No Completed Calls</h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CallLogPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["120"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"130","line":4,"column":17,"nodeType":"127","messageId":"128","endLine":4,"endColumn":25},{"ruleId":"125","severity":1,"message":"131","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":19},{"ruleId":"125","severity":1,"message":"132","line":9,"column":21,"nodeType":"127","messageId":"128","endLine":9,"endColumn":33},{"ruleId":"121","replacedBy":"133"},{"ruleId":"123","replacedBy":"134"},{"ruleId":"125","severity":1,"message":"135","line":12,"column":10,"nodeType":"127","messageId":"128","endLine":12,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":67,"column":6,"nodeType":"138","endLine":67,"endColumn":8,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":26,"column":6,"nodeType":"138","endLine":26,"endColumn":8,"suggestions":"141"},{"ruleId":"125","severity":1,"message":"142","line":6,"column":28,"nodeType":"127","messageId":"128","endLine":6,"endColumn":35},{"ruleId":"125","severity":1,"message":"143","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"144","line":44,"column":6,"nodeType":"138","endLine":44,"endColumn":8,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"144","line":58,"column":6,"nodeType":"138","endLine":58,"endColumn":8,"suggestions":"146"},{"ruleId":"125","severity":1,"message":"147","line":73,"column":13,"nodeType":"127","messageId":"128","endLine":73,"endColumn":19},{"ruleId":"136","severity":1,"message":"148","line":44,"column":6,"nodeType":"138","endLine":44,"endColumn":17,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.",["150"],["151"],"'nanoid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'petId' and 'roomName'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["153"],"'loading' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["154"],["155"],"'schRes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [petId, roomName]",{"range":"166","text":"167"},"Update the dependencies array to be: [loadUser]",{"range":"168","text":"169"},"Update the dependencies array to be: [user._id]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [user, user._id]",{"range":"173","text":"174"},[2137,2139],"[petId, roomName]",[931,933],"[loadUser]",[1500,1502],"[user._id]",[1955,1957],[1218,1229],"[user, user._id]"]