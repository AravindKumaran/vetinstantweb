[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\utils\\setAuthToken.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"19","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"20","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js":"21","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js":"22","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js":"23","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js":"24","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"25","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js":"26","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js":"27","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js":"28","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js":"29","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js":"30"},{"size":469,"mtime":1612935527724,"results":"31","hashOfConfig":"32"},{"size":1395,"mtime":1613194714653,"results":"33","hashOfConfig":"32"},{"size":4405,"mtime":1613103718809,"results":"34","hashOfConfig":"32"},{"size":3524,"mtime":1613023801910,"results":"35","hashOfConfig":"32"},{"size":3372,"mtime":1613105323230,"results":"36","hashOfConfig":"32"},{"size":138,"mtime":1612937838477,"results":"37","hashOfConfig":"32"},{"size":4079,"mtime":1613103738616,"results":"38","hashOfConfig":"32"},{"size":362,"mtime":1606886196678,"results":"39","hashOfConfig":"32"},{"size":969,"mtime":1612933219433,"results":"40","hashOfConfig":"32"},{"size":443,"mtime":1612936776068,"results":"41","hashOfConfig":"32"},{"size":439,"mtime":1612951058953,"results":"42","hashOfConfig":"32"},{"size":251,"mtime":1612938552228,"results":"43","hashOfConfig":"32"},{"size":1246,"mtime":1613104033191,"results":"44","hashOfConfig":"32"},{"size":235,"mtime":1613037914716,"results":"45","hashOfConfig":"32"},{"size":1089,"mtime":1613467749512,"results":"46","hashOfConfig":"32"},{"size":272,"mtime":1612932227806,"results":"47","hashOfConfig":"32"},{"size":9072,"mtime":1613112343275,"results":"48","hashOfConfig":"32"},{"size":688,"mtime":1612953030861,"results":"49","hashOfConfig":"32"},{"size":322,"mtime":1612933214649,"results":"50","hashOfConfig":"32"},{"size":5202,"mtime":1613210271412,"results":"51","hashOfConfig":"32"},{"size":637,"mtime":1613027629282,"results":"52","hashOfConfig":"32"},{"size":278,"mtime":1613027244048,"results":"53","hashOfConfig":"32"},{"size":4394,"mtime":1613131068038,"results":"54","hashOfConfig":"32"},{"size":1623,"mtime":1613128972583,"results":"55","hashOfConfig":"32"},{"size":2923,"mtime":1613194297479,"results":"56","hashOfConfig":"32"},{"size":2067,"mtime":1613131046059,"results":"57","hashOfConfig":"32"},{"size":3565,"mtime":1613381122143,"results":"58","hashOfConfig":"32"},{"size":4860,"mtime":1613476910037,"results":"59","hashOfConfig":"32"},{"size":1301,"mtime":1613472225545,"results":"60","hashOfConfig":"32"},{"size":465,"mtime":1613475664031,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1iylv84",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js",[],["135","136"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js",["137"],"import React, { useEffect } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Toaster } from 'react-hot-toast'\nimport { useAuth } from 'context/use-auth'\nimport PrivateRoute from 'routing/PrivateRoute'\n\nimport LoginPage from 'pages/auth/LoginPage'\nimport RegisterPage from 'pages/auth/RegisterPage'\nimport HomePage from 'pages/doctor/HomePage'\nimport PatientListPage from 'pages/doctor/PatientListPage'\nimport NotFound from 'pages/NotFound'\nimport PrescriptionPage from 'pages/doctor/PrescriptionPage'\nimport VideoCallPage from 'pages/doctor/VideoCallPage'\nimport ChatPage from 'pages/doctor/ChatPage'\n\nconst App = () => {\n  const { loadUser } = useAuth()\n\n  useEffect(() => {\n    if (localStorage.token) {\n      loadUser()\n    }\n  }, [])\n\n  return (\n    <>\n      <Toaster />\n      <Switch>\n        <PrivateRoute exact path='/' component={HomePage} />\n        <PrivateRoute exact path='/patientList' component={PatientListPage} />\n        <PrivateRoute exact path='/prescription' component={PrescriptionPage} />\n        <PrivateRoute exact path='/video-call/:id' component={VideoCallPage} />\n        <PrivateRoute exact path='/chat/:id' component={ChatPage} />\n        <Route path='/register' component={RegisterPage} />\n        <Route path='/login' component={LoginPage} />\n        <Route path='/*' component={NotFound} />\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n",["138","139"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["140"],"import React, { useEffect, useState } from 'react'\r\nimport { useAuth } from 'context/use-auth'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport Layout from 'components/layouts/Layout'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport AddDoctorDetails from 'components/layouts/AddDoctorDetails'\r\n\r\nimport './HomePage.css'\r\n\r\nconst HomePage = () => {\r\n  const { loadUser, user } = useAuth()\r\n  const [loading, setLoading] = useState(false)\r\n  const [doctorDetails, setDoctorDetails] = useState()\r\n\r\n  useEffect(() => {\r\n    loadUser()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getDoctorDetails = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const res = await client.get(`/doctors/user/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        setDoctorDetails(res.data.doctor)\r\n        setLoading(false)\r\n      } catch (err) {\r\n        toast.error(\r\n          err.response.data.msg\r\n            ? 'Please add your details below'\r\n            : 'Something Went Wrong! Try Again Later'\r\n        )\r\n        setLoading(false)\r\n      }\r\n    }\r\n    if (user) {\r\n      getDoctorDetails()\r\n    }\r\n  }, [user?._id])\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {user && (\r\n        <h2 className='doc__title text-center'>Welcome Doctor: {user.name}</h2>\r\n      )}\r\n      {doctorDetails ? (\r\n        <div className='doctor'>\r\n          <h4>Here are your Details: </h4>\r\n          <div className='doctor__card'>\r\n            <h5>Phone Number:</h5>\r\n            <p>{doctorDetails.phone}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Hospital/Clinic Name :</h5>\r\n            <p>{doctorDetails.hospital.name}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Consultation Fees :</h5>\r\n            <p>₹ {doctorDetails.fee}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5> Qualifications :</h5>\r\n            <p>{doctorDetails.qlf}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Registration Number :</h5>\r\n            <p>{doctorDetails.regNo}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Account Number :</h5>\r\n            <p>{doctorDetails.accno}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Name On Card :</h5>\r\n            <p>{doctorDetails.accname}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Account Type :</h5>\r\n            <p>{doctorDetails.acctype}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>IFSC Code :</h5>\r\n            <p>{doctorDetails.ifsc}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Your Form File :</h5>\r\n            <p>{doctorDetails.file}</p>\r\n          </div>\r\n          <div className='doctor__card'>\r\n            <h5>Your Profile File :</h5>\r\n            <p>{doctorDetails.profile}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h3 className='text-center py-10'>Add Your Details Below!</h3>\r\n          <AddDoctorDetails />\r\n        </>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js",[],["141","142"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js",["143"],"import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useAuth } from 'context/use-auth'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated, loading } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated ? <Redirect to='/login' /> : <Component {...props} />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\utils\\setAuthToken.js",[],["144","145"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js",[],["146","147"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],["148","149"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["150"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\nimport { FiMessageCircle, FiVideo } from 'react-icons/fi'\r\n\r\nimport './PatientListPage.css'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PatientListPage = () => {\r\n  const { user } = useAuth()\r\n  const [patients, setPatients] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentPatient, setCurrentPatient] = useState()\r\n  const [pet, setPet] = useState(null)\r\n  const [petLoading, setPetLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getPatients = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/rooms/receiver/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        // console.log('Res', res)\r\n        setPatients(res.data.room)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        toast.error('Something Went Wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getPatients()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handlePatModal = async (pat) => {\r\n    setCurrentPatient(pat)\r\n    toggleModal()\r\n    try {\r\n      setPetLoading(true)\r\n      const petRes = await client.get(`/pets/${pat.petId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n      setPet(petRes.data.exPet)\r\n      setPetLoading(false)\r\n    } catch (error) {\r\n      toast.error('Something Went Wrong! Please try again later!')\r\n      setPetLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal\r\n          toggle={toggleModal}\r\n          title={`${currentPatient.senderName} pet details`}\r\n        >\r\n          <div className='chat-video_wrapper flex-center'>\r\n            <Link\r\n              to={`/video-call/${currentPatient.name}`}\r\n              className='btn flex-center'\r\n            >\r\n              <FiVideo className='icon' />\r\n              Video Call\r\n            </Link>\r\n            <Link\r\n              to={`/chat/${currentPatient.name}`}\r\n              className='btn flex-center'\r\n            >\r\n              <FiMessageCircle className='icon' />\r\n              Chat\r\n            </Link>\r\n          </div>\r\n          {petLoading && <LoadingSpinner asOverlay />}\r\n          {pet && (\r\n            <div className='pet__details'>\r\n              <h5>\r\n                Weight: <span>{pet.weight} Kg</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Gender: <span>{pet.gender}</span>\r\n              </h5>\r\n              <h5>\r\n                Pet Type: <span>{pet.type}</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Age:\r\n                <span>\r\n                  {pet.years !== 0 && `${pet.years} years`}\r\n                  {pet.months !== 0 && `${pet.months} months`}\r\n                </span>\r\n              </h5>\r\n\r\n              {pet.petHistoryImages.length > 0 && (\r\n                <>\r\n                  <h5>Pet History Images: </h5>\r\n                  <div className='pet__history__images'>\r\n                    {pet.petHistoryImages.map((img, i) => (\r\n                      <div key={`${img}-${i}`} className='pet__history__img'>\r\n                        <img\r\n                          src={`http://192.168.43.242:8000/${img}`}\r\n                          width='160'\r\n                          height='160'\r\n                          alt={`${pet.type}`}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n      {patients.length === 0 && (\r\n        <h3 className='text-center'>\r\n          No Patients Have Contacted You, Please Comeback After Some Time!\r\n        </h3>\r\n      )}\r\n\r\n      {patients.length > 0 && (\r\n        <h3 className='text-center'>Here are your patients list:</h3>\r\n      )}\r\n      {patients.length > 0 && (\r\n        <div className='center'>\r\n          {patients.map((pat) => (\r\n            <div\r\n              key={pat._id}\r\n              className='patient__list'\r\n              onClick={() => handlePatModal(pat)}\r\n            >\r\n              <div className='patient__list__item'>\r\n                <p className='patient__list__item__img'>{pat.senderName[0]}</p>\r\n                <p className='patient__list__item__name'>{pat.senderName}</p>\r\n              </div>\r\n              <FiChevronRight style={{ fontSize: '2.5rem' }} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PatientListPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js",[],["151","152"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js",["153"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js",["154"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAuth } from 'context/use-auth'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport client from 'services/client'\r\nimport Layout from 'components/layouts/Layout'\r\nimport Room from 'components/videoCall/Room'\r\n\r\nimport './VideoCallPage.css'\r\n\r\nconst VideoCallPage = () => {\r\n  const params = useParams()\r\n  const { user } = useAuth()\r\n  const [token, setToken] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getVideoToken = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const tokenRes = await client.post(\r\n          `/users/getToken`,\r\n          {\r\n            userName: user.name,\r\n            roomName: params.id,\r\n          },\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.token}` },\r\n          }\r\n        )\r\n        setToken(tokenRes.data)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.log('Error', error)\r\n        toast.error('Something went wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getVideoToken()\r\n  }, [user.name])\r\n\r\n  const handleLogout = useCallback((event) => {\r\n    setToken(null)\r\n    window.location.href = '/'\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {token && (\r\n        <Room roomName={params.id} token={token} handleLogout={handleLogout} />\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default VideoCallPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["155","156","157","158","159"],"import Button from 'components/shared/Forms/Button'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport { FiMic, FiMicOff } from 'react-icons/fi'\r\n\r\nconst Participant = ({ participant }) => {\r\n  const [videoTracks, setVideoTracks] = useState([])\r\n  const [audioTracks, setAudioTracks] = useState([])\r\n  const [muteAudio, setMuteAudio] = useState(true)\r\n\r\n  const videoRef = useRef()\r\n  const audioRef = useRef()\r\n\r\n  const trackpubsToTracks = (trackMap) =>\r\n    Array.from(trackMap.values())\r\n      .map((publication) => publication.track)\r\n      .filter((track) => track !== null)\r\n\r\n  useEffect(() => {\r\n    setVideoTracks(trackpubsToTracks(participant.videoTracks))\r\n    setAudioTracks(trackpubsToTracks(participant.audioTracks))\r\n\r\n    const trackSubscribed = (track) => {\r\n      if (track.kind === 'video') {\r\n        setVideoTracks((videoTracks) => [...videoTracks, track])\r\n      } else if (track.kind === 'audio') {\r\n        setAudioTracks((audioTracks) => [...audioTracks, track])\r\n      }\r\n    }\r\n\r\n    const trackUnsubscribed = (track) => {\r\n      if (track.kind === 'video') {\r\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track))\r\n      } else if (track.kind === 'audio') {\r\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track))\r\n      }\r\n    }\r\n\r\n    participant.on('trackSubscribed', trackSubscribed)\r\n    participant.on('trackUnsubscribed', trackUnsubscribed)\r\n\r\n    return () => {\r\n      setVideoTracks([])\r\n      setAudioTracks([])\r\n      participant.removeAllListeners()\r\n    }\r\n  }, [participant])\r\n\r\n  useEffect(() => {\r\n    const videoTrack = videoTracks[0]\r\n    if (videoTrack) {\r\n      videoTrack.attach(videoRef.current)\r\n      return () => {\r\n        videoTrack.detach()\r\n      }\r\n    }\r\n  }, [videoTracks])\r\n\r\n  useEffect(() => {\r\n    const audioTrack = audioTracks[0]\r\n    if (audioTrack) {\r\n      audioTrack.attach(audioRef.current)\r\n      return () => {\r\n        audioTrack.detach()\r\n      }\r\n    }\r\n  }, [audioTracks])\r\n\r\n  // const handleMuteAudio = () => {\r\n  //   setMuteAudio(!muteAudio)\r\n  //   console.log('Muting')\r\n  //   if (videoRef.current) {\r\n  //     videoRef.current.muted = muteAudio\r\n  //     videoRef.current.defaultMuted = muteAudio\r\n  //   }\r\n  //   console.log(videoRef.current)\r\n  // }\r\n\r\n  return (\r\n    <div className='participant'>\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <h3>{participant.identity}</h3>\r\n        <video ref={videoRef} autoPlay={true} />\r\n        <audio ref={audioRef} autoPlay={true} />\r\n        {/* <audio ref={audioRef} autoPlay={true} muted={muteAudio} /> */}\r\n        {/* <div onClick={handleMuteAudio}>\r\n          {muteAudio ? (\r\n            <FiMic className='call-icons' />\r\n          ) : (\r\n            <FiMicOff className='call-icons' />\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Participant\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js",["160"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":23,"column":6,"nodeType":"167","endLine":23,"endColumn":8,"suggestions":"168"},{"ruleId":"161","replacedBy":"169"},{"ruleId":"163","replacedBy":"170"},{"ruleId":"165","severity":1,"message":"171","line":45,"column":6,"nodeType":"167","endLine":45,"endColumn":17,"suggestions":"172"},{"ruleId":"161","replacedBy":"173"},{"ruleId":"163","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":6,"column":28,"nodeType":"177","messageId":"178","endLine":6,"endColumn":35},{"ruleId":"161","replacedBy":"179"},{"ruleId":"163","replacedBy":"180"},{"ruleId":"161","replacedBy":"181"},{"ruleId":"163","replacedBy":"182"},{"ruleId":"161","replacedBy":"183"},{"ruleId":"163","replacedBy":"184"},{"ruleId":"165","severity":1,"message":"185","line":44,"column":6,"nodeType":"167","endLine":44,"endColumn":8,"suggestions":"186"},{"ruleId":"161","replacedBy":"187"},{"ruleId":"163","replacedBy":"188"},{"ruleId":"165","severity":1,"message":"185","line":72,"column":6,"nodeType":"167","endLine":72,"endColumn":8,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"190","line":42,"column":6,"nodeType":"167","endLine":42,"endColumn":17,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"192","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":14},{"ruleId":"175","severity":1,"message":"193","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":15},{"ruleId":"175","severity":1,"message":"194","line":4,"column":17,"nodeType":"177","messageId":"178","endLine":4,"endColumn":25},{"ruleId":"175","severity":1,"message":"195","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":19},{"ruleId":"175","severity":1,"message":"196","line":9,"column":21,"nodeType":"177","messageId":"178","endLine":9,"endColumn":33},{"ruleId":"165","severity":1,"message":"185","line":58,"column":6,"nodeType":"167","endLine":58,"endColumn":8,"suggestions":"197"},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["200"],["198"],["199"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["201"],["198"],["199"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["198"],["199"],["198"],["199"],["198"],["199"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["202"],["198"],["199"],["203"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["204"],"'Button' is defined but never used.","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.",["205"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"213","fix":"214"},{"desc":"210","fix":"215"},"Update the dependencies array to be: [loadUser]",{"range":"216","text":"217"},"Update the dependencies array to be: [user, user._id]",{"range":"218","text":"219"},"Update the dependencies array to be: [user._id]",{"range":"220","text":"221"},{"range":"222","text":"221"},"Update the dependencies array to be: [params.id, user.name]",{"range":"223","text":"224"},{"range":"225","text":"221"},[756,758],"[loadUser]",[1279,1290],"[user, user._id]",[1500,1502],"[user._id]",[2277,2279],[1254,1265],"[params.id, user.name]",[1955,1957]]