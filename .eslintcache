[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\NavLinks.js":"13","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"14","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PendingCallPage.js":"15","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js":"16","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js":"17","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js":"18","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"19","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js":"20","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js":"21","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js":"22","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js":"23","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js":"24","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js":"25","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js":"26","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\admin\\DashBoard.js":"27","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"28","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\AdminRoute.js":"29","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"30","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js":"31","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\admin\\Hospitals.js":"32","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js":"33","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"34","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"35","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js":"36","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js":"37","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\serviceWorker.js":"38","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\firebaseInit.js":"39"},{"size":469,"mtime":1616240214631,"results":"40","hashOfConfig":"41"},{"size":2328,"mtime":1616242064757,"results":"42","hashOfConfig":"41"},{"size":15403,"mtime":1617367659886,"results":"43","hashOfConfig":"41"},{"size":202,"mtime":1617448755349,"results":"44","hashOfConfig":"41"},{"size":439,"mtime":1612951058953,"results":"45","hashOfConfig":"41"},{"size":3242,"mtime":1616407765590,"results":"46","hashOfConfig":"41"},{"size":5171,"mtime":1617602188323,"results":"47","hashOfConfig":"41"},{"size":4487,"mtime":1617602154185,"results":"48","hashOfConfig":"41"},{"size":248,"mtime":1617448761151,"results":"49","hashOfConfig":"41"},{"size":11084,"mtime":1617367257502,"results":"50","hashOfConfig":"41"},{"size":278,"mtime":1613027244048,"results":"51","hashOfConfig":"41"},{"size":322,"mtime":1612933214649,"results":"52","hashOfConfig":"41"},{"size":1404,"mtime":1616242085407,"results":"53","hashOfConfig":"41"},{"size":6397,"mtime":1617602121846,"results":"54","hashOfConfig":"41"},{"size":17847,"mtime":1617602237347,"results":"55","hashOfConfig":"41"},{"size":1246,"mtime":1613104033191,"results":"56","hashOfConfig":"41"},{"size":637,"mtime":1613027629282,"results":"57","hashOfConfig":"41"},{"size":537,"mtime":1616389084209,"results":"58","hashOfConfig":"41"},{"size":4500,"mtime":1617347962293,"results":"59","hashOfConfig":"41"},{"size":1950,"mtime":1613560487490,"results":"60","hashOfConfig":"41"},{"size":5130,"mtime":1614683329388,"results":"61","hashOfConfig":"41"},{"size":2475,"mtime":1613560798652,"results":"62","hashOfConfig":"41"},{"size":2067,"mtime":1613131046059,"results":"63","hashOfConfig":"41"},{"size":688,"mtime":1612953030861,"results":"64","hashOfConfig":"41"},{"size":969,"mtime":1612933219433,"results":"65","hashOfConfig":"41"},{"size":4532,"mtime":1616416987102,"results":"66","hashOfConfig":"41"},{"size":6697,"mtime":1617364593373,"results":"67","hashOfConfig":"41"},{"size":2923,"mtime":1613194297479,"results":"68","hashOfConfig":"41"},{"size":508,"mtime":1616231475105,"results":"69","hashOfConfig":"41"},{"size":11235,"mtime":1617602211518,"results":"70","hashOfConfig":"41"},{"size":1301,"mtime":1613472225545,"results":"71","hashOfConfig":"41"},{"size":3523,"mtime":1616391908563,"results":"72","hashOfConfig":"41"},{"size":362,"mtime":1606886196678,"results":"73","hashOfConfig":"41"},{"size":272,"mtime":1612932227806,"results":"74","hashOfConfig":"41"},{"size":235,"mtime":1613037914716,"results":"75","hashOfConfig":"41"},{"size":465,"mtime":1613475664031,"results":"76","hashOfConfig":"41"},{"size":354,"mtime":1615267948014,"results":"77","hashOfConfig":"41"},{"size":418,"mtime":1617449131607,"results":"78","hashOfConfig":"41"},{"size":933,"mtime":1617448393639,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1iylv84",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js",[],["172","173"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\App.js",["174","175"],"import React, { useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Toaster } from 'react-hot-toast'\r\nimport { useAuth } from 'context/use-auth'\r\nimport PrivateRoute from 'routing/PrivateRoute'\r\nimport AdminRoute from 'routing/AdminRoute'\r\n\r\nimport LoginPage from 'pages/auth/LoginPage'\r\nimport RegisterPage from 'pages/auth/RegisterPage'\r\nimport HomePage from 'pages/doctor/HomePage'\r\nimport PatientListPage from 'pages/doctor/PatientListPage'\r\nimport NotFound from 'pages/NotFound'\r\nimport PrescriptionPage from 'pages/doctor/PrescriptionPage'\r\nimport VideoCallPage from 'pages/doctor/VideoCallPage'\r\nimport ChatPage from 'pages/doctor/ChatPage'\r\nimport CallLogPage from 'pages/doctor/CallLogPage'\r\nimport ForgotPasswordPage from 'pages/auth/ForgotPasswordPage'\r\nimport ResetPasswordPage from 'pages/auth/ResetPasswordPage'\r\nimport PendingCallPage from 'pages/doctor/PendingCallPage'\r\n\r\nimport DashBoard from 'pages/admin/DashBoard'\r\nimport Hospitals from 'pages/admin/Hospitals'\r\n\r\nconst App = () => {\r\n  const { loadUser, token } = useAuth()\r\n\r\n  useEffect(() => {\r\n    if (localStorage.token) {\r\n      loadUser()\r\n    }\r\n  }, [token !== null])\r\n\r\n  return (\r\n    <>\r\n      <Toaster />\r\n      <Switch>\r\n        <PrivateRoute exact path='/' component={HomePage} />\r\n        <AdminRoute exact path='/dashboard' component={DashBoard} />\r\n        <AdminRoute exact path='/hospitals' component={Hospitals} />\r\n        <PrivateRoute exact path='/patientList' component={PatientListPage} />\r\n        <PrivateRoute exact path='/prescription' component={PrescriptionPage} />\r\n        <PrivateRoute exact path='/video-call/:id' component={VideoCallPage} />\r\n        <PrivateRoute exact path='/chat/:id' component={ChatPage} />\r\n        <PrivateRoute exact path='/call-log' component={CallLogPage} />\r\n        <PrivateRoute\r\n          exact\r\n          path='/call-log/pending'\r\n          component={PendingCallPage}\r\n        />\r\n        <Route path='/register' component={RegisterPage} />\r\n        <Route path='/login' component={LoginPage} />\r\n        <Route path='/forgotPassword' component={ForgotPasswordPage} />\r\n        <Route path='/passwordreset/:token' component={ResetPasswordPage} />\r\n        <Route path='/*' component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n",["176","177"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\RegisterPage.js",["178","179","180"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\client.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\NotFound.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\VideoCallPage.js",["181","182"],"import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useParams, useLocation } from 'react-router-dom'\r\nimport { useAuth } from 'context/use-auth'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport client from 'services/client'\r\nimport Layout from 'components/layouts/Layout'\r\nimport Room from 'components/videoCall/Room'\r\n\r\nimport './VideoCallPage.css'\r\n\r\nconst VideoCallPage = () => {\r\n  const params = useParams()\r\n  const location = useLocation()\r\n  console.log('Location', location.state.item)\r\n  const { user } = useAuth()\r\n  const [token, setToken] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const handleDeleteCall = async () => {\r\n    // const callRes = await pendingsApi.singleCallPending(\r\n    //   route.params?.item._id\r\n    // )\r\n    // if (callRes.ok) {\r\n    //   const call = callRes.data.call\r\n    //   call.userJoined && call.docJoined\r\n    //     ? await pendingsApi.deleteCallPending(call._id)\r\n    //     : await pendingsApi.updateCallPending(call._id, {\r\n    //         userJoined: false,\r\n    //       })\r\n    // }\r\n    const item = location.state.item\r\n    try {\r\n      const cRes = await client.get(`/pendingcalls/${item._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n\r\n      const call = cRes.data.call\r\n      call.userJoined && call.docJoined\r\n        ? await client.delete(`/pendingcalls/${item._id}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n          })\r\n        : await client.patch(\r\n            `/pendingcalls/${item._id}`,\r\n            { docJoined: false },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.token}`,\r\n              },\r\n            }\r\n          )\r\n    } catch (error) {\r\n      console.log('Error', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getVideoToken = async () => {\r\n      try {\r\n        setLoading(true)\r\n        await client.patch(\r\n          `/pendingcalls/${location.state.item._id}`,\r\n          { docJoined: true },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.token}`,\r\n            },\r\n          }\r\n        )\r\n        const tokenRes = await client.post(\r\n          `/users/getToken`,\r\n          {\r\n            userName: user.name,\r\n            roomName: params.id,\r\n          },\r\n          {\r\n            headers: { Authorization: `Bearer ${localStorage.token}` },\r\n          }\r\n        )\r\n        setToken(tokenRes.data)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.log('Error', error)\r\n        toast.error('Something went wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getVideoToken()\r\n  }, [user.name])\r\n\r\n  const handleLogout = useCallback((event) => {\r\n    handleDeleteCall()\r\n    setToken(null)\r\n    window.location.href = '/'\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {token && (\r\n        <Room roomName={params.id} token={token} handleLogout={handleLogout} />\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default VideoCallPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\CallLogPage.js",["183","184"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js",["185"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js",[],["186","187"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\AddDoctorDetails.js",[],["188","189"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Backdrop.js",[],["190","191"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\NavLinks.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["192","193","194","195","196"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PendingCallPage.js",["197","198"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\PasswordInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js",[],["199","200"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\PrivateRoute.js",[],["201","202"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ForgotPasswordPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\ChatPage.js",["203","204"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nimport Input from 'components/shared/Forms/Input'\r\nimport Button from 'components/shared/Forms/Button'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport { FiSend } from 'react-icons/fi'\r\nimport { useAuth } from 'context/use-auth'\r\nimport socket from 'services/socket'\r\nimport { nanoid } from 'nanoid'\r\n\r\nimport './ChatPage.css'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst ChatPage = () => {\r\n  const { user } = useAuth()\r\n  const { handleSubmit, register, reset } = useForm()\r\n  const [messages, setMessages] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const loc = useLocation()\r\n  const { name: roomName, petId, senderName } = loc.state?.data\r\n\r\n  useEffect(() => {\r\n    const getAllChats = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const chatRes = await client.get(`/chats/room/${roomName}/${petId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        // console.log('Res', chatRes)\r\n        // const sortedChat = chatRes.data.chats.sort(\r\n        //   (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\r\n        // )\r\n        const newMessages = chatRes.data.chats.map((msg) => {\r\n          return {\r\n            ...msg,\r\n            user: {\r\n              _id: msg.userId,\r\n              name: msg.userName,\r\n            },\r\n          }\r\n        })\r\n        setMessages(newMessages)\r\n        setLoading(false)\r\n\r\n        socket.emit('room', roomName)\r\n        socket.on('chat', (data) => {\r\n          // console.log('Data', sortedData)\r\n          setMessages(data)\r\n        })\r\n      } catch (error) {\r\n        console.log('Error', error)\r\n        setLoading(false)\r\n        toast.error(\r\n          error.response?.data?.msg || 'Something went wrong! Please try again!'\r\n        )\r\n      }\r\n    }\r\n\r\n    getAllChats()\r\n    // console.log('Socket', socket)\r\n  }, [])\r\n\r\n  const handleSendMessage = async ({ msg }) => {\r\n    // console.log('Mssd', msg)\r\n    const newMsg = {\r\n      text: msg,\r\n      roomName: roomName,\r\n      petId: petId,\r\n      userId: user._id,\r\n      userName: user.name,\r\n    }\r\n\r\n    // console.log('NewMsg', newMsg)\r\n\r\n    try {\r\n      setLoading(true)\r\n      const res = await client.post('/chats', newMsg, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n      console.log('ResPost', res.data.newChat)\r\n      const chat = res.data.newChat\r\n      chat.user = {\r\n        _id: chat.userId,\r\n        name: chat.userName,\r\n      }\r\n      setLoading(false)\r\n      const allMsg = [...messages, chat].sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n      )\r\n      socket.emit('chat', {\r\n        room: roomName,\r\n        msg: allMsg,\r\n      })\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast.error(\r\n        error.response?.data.msg || 'Something went wrong! Please try again!'\r\n      )\r\n    }\r\n\r\n    reset()\r\n  }\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      <div className='chat center'>\r\n        <div className='chat__container'>\r\n          <h2 className='text-center py-10'>Chatting With {senderName}</h2>\r\n          <div className='chat__messages'>\r\n            {messages.length > 0 &&\r\n              messages.map((msg) => (\r\n                <div\r\n                  key={msg._id}\r\n                  className={\r\n                    msg.userId === user._id\r\n                      ? 'chat__messages__local'\r\n                      : 'chat__messages__remote'\r\n                  }\r\n                >\r\n                  <div className=' message'>\r\n                    <p\r\n                      className={\r\n                        msg.userId === user._id ? 'local__msg' : 'remote__msg'\r\n                      }\r\n                    >\r\n                      {msg.text}\r\n                    </p>\r\n                    <p className='msg__date__time'>\r\n                      {new Date(msg.createdAt).toLocaleDateString()}\r\n                    </p>\r\n                    <p className='msg__date__time'>\r\n                      {new Date(msg.createdAt).toLocaleTimeString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <form onSubmit={handleSubmit(handleSendMessage)}>\r\n            <div className='chat__input'>\r\n              <Input\r\n                element='textarea'\r\n                placeholder='Enter your message'\r\n                name='msg'\r\n                rows={2}\r\n                myRef={register({\r\n                  required: 'Please enter your message',\r\n                })}\r\n                // error={errors.msg}\r\n              />\r\n              <Button>\r\n                <FiSend />\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ChatPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\ResetPasswordPage.js",["205"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport toast from 'react-hot-toast'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Button from 'components/shared/Forms/Button'\r\nimport PasswordInput from 'components/shared/Forms/PasswordInput'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\n\r\nimport client from 'services/client'\r\n\r\nconst ResetPasswordPage = () => {\r\n  const { handleSubmit, register, errors, watch } = useForm()\r\n  const pass = useRef()\r\n  pass.current = watch('password', '')\r\n  const history = useHistory()\r\n  const params = useParams()\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const onSubmit = async ({ password }) => {\r\n    try {\r\n      setLoading(true)\r\n      await client.post(`/auth/resetpassword/${params.token}`, { password })\r\n      setLoading(false)\r\n      toast.success('Password Reset Success! Please login')\r\n      setTimeout(() => {\r\n        history.replace('/login')\r\n      }, 2000)\r\n    } catch (error) {\r\n      setLoading(false)\r\n      toast.error(\r\n        error.response?.data.msg || 'Something Went Wrong, Please try again!'\r\n      )\r\n      setTimeout(() => {\r\n        history.replace('/login')\r\n      }, 2000)\r\n    }\r\n  }\r\n  return (\r\n    <div className='center'>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      <div className='form__wrapper'>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-center'>Reset Your Password</h2>\r\n\r\n          <PasswordInput\r\n            label='Password'\r\n            name='password'\r\n            placeholder='********'\r\n            myRef={register({\r\n              required: 'Please enter your password',\r\n              minLength: {\r\n                value: 8,\r\n                message: 'Password must be atleast 8 characters long',\r\n              },\r\n            })}\r\n            error={errors.password}\r\n          />\r\n          <PasswordInput\r\n            label='Repeat Password'\r\n            name='repeatpassword'\r\n            placeholder='********'\r\n            myRef={register({\r\n              validate: (value) =>\r\n                value === pass.current || 'The passwords do not match',\r\n            })}\r\n            error={errors.repeatpassword}\r\n          />\r\n\r\n          <Button classNames='full' type='submit'>\r\n            Reset Password\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ResetPasswordPage\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Room.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Select.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Input.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\admin\\DashBoard.js",["206","207"],"import React, { useEffect, useState, useMemo } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\nimport { useTable } from 'react-table'\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\n\r\nimport './DashBoard.css'\r\n\r\nconst DashBoard = () => {\r\n  const [allDoctors, setAllDoctors] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentDoc, setCurrentDoc] = useState('')\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Name',\r\n        accessor: 'user.name',\r\n        Cell: ({ row: { original } }) => (\r\n          <p\r\n            className='doc__name__link'\r\n            onClick={() => handleShowDoctor(original)}\r\n          >\r\n            {original.user.name}\r\n          </p>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Email',\r\n        accessor: 'user.emailID',\r\n      },\r\n      {\r\n        Header: 'Block',\r\n        accessor: 'user.block',\r\n        Cell: ({ row: { original } }) => (\r\n          <p>{original.user.block === false ? 'No' : 'Yes'}</p>\r\n        ),\r\n      },\r\n      {\r\n        Header: 'Hospital Name',\r\n        accessor: 'hospital.name',\r\n      },\r\n      {\r\n        Header: 'Action',\r\n        Cell: ({ row: { original } }) => (\r\n          <button className='btn btn-row' onClick={() => handleBlock(original)}>\r\n            {original.user.block === false ? 'Block' : 'UnBlock'}\r\n          </button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  const data = useMemo(() => allDoctors, [allDoctors])\r\n\r\n  useEffect(() => {\r\n    const getAllDoctors = async () => {\r\n      try {\r\n        setLoading(true)\r\n        const res = await client.get(`/doctors`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        console.log('docos', res.data.doctors)\r\n        setAllDoctors(res.data.doctors)\r\n        setLoading(false)\r\n      } catch (err) {\r\n        if (err.response?.data?.msg) {\r\n          toast.error('Something Went Wrong! Please try again later')\r\n        }\r\n\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    getAllDoctors()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handleShowDoctor = (doc) => {\r\n    setCurrentDoc(doc)\r\n    toggleModal()\r\n  }\r\n\r\n  const handleBlock = async (doc) => {\r\n    doc.user.block = !doc.user.block\r\n    try {\r\n      setLoading(true)\r\n      await client.patch(\r\n        `/users/block/${doc.user._id}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        }\r\n      )\r\n      setLoading(false)\r\n    } catch (err) {\r\n      console.log('Error', err)\r\n      toast.error('Something Went Wrong! Not able to block/unblock doctor')\r\n\r\n      setLoading(false)\r\n      return\r\n    }\r\n  }\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data })\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal\r\n          toggle={toggleModal}\r\n          title={`Dr. ${currentDoc.user.name} Details`}\r\n        >\r\n          {currentDoc && (\r\n            <div className='doctor'>\r\n              <h4>Details: </h4>\r\n              <div className='doctor__card'>\r\n                <h5>Registration Number :</h5>\r\n                <p>{currentDoc.regNo}</p>\r\n              </div>\r\n              <div className='doctor__card'>\r\n                <h5>Phone Number:</h5>\r\n                <p>{currentDoc.phone}</p>\r\n              </div>\r\n              <div className='doctor__card'>\r\n                <h5>Hospital/Clinic Name :</h5>\r\n                <p>{currentDoc?.hospital?.name}</p>\r\n              </div>\r\n              <div className='doctor__card'>\r\n                <h5>Consultation Fees :</h5>\r\n                <p>₹ {currentDoc.fee}</p>\r\n              </div>\r\n              <div className='doctor__card'>\r\n                <h5> Qualifications :</h5>\r\n                <p>{currentDoc.qlf}</p>\r\n              </div>\r\n\r\n              {+currentDoc.fee > 0 && (\r\n                <>\r\n                  <h4>Billing Details: </h4>\r\n                  <div className='doctor__card'>\r\n                    <h5>Bank Account Number :</h5>\r\n                    <p>{currentDoc.accno}</p>\r\n                  </div>\r\n                  <div className='doctor__card'>\r\n                    <h5>Account Holder Name :</h5>\r\n                    <p>{currentDoc.accname}</p>\r\n                  </div>\r\n                  <div className='doctor__card'>\r\n                    <h5>Account Type :</h5>\r\n                    <p>{currentDoc.acctype}</p>\r\n                  </div>\r\n                  <div className='doctor__card'>\r\n                    <h5>IFSC Code :</h5>\r\n                    <p>{currentDoc.ifsc}</p>\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className='doctor__card'>\r\n                <h5>Registration Certificate :</h5>\r\n                <a\r\n                  style={{ cursor: 'pointer' }}\r\n                  href={currentDoc.file}\r\n                  target='_blank'\r\n                >\r\n                  {currentDoc.file.split('/documents/')[1]}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n      <div className='center'>\r\n        <h1 className='py-10'>All Doctors</h1>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps()} className='table-header'>\r\n                    {column.render('Header')}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td {...cell.getCellProps()} className='table-rows'>\r\n                        {cell.render('Cell')}\r\n                      </td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default DashBoard\r\n","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["208","209","210","211","212"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\routing\\AdminRoute.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["213","214"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\CallLogCard.js",[],["215","216"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\admin\\Hospitals.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\reportWebVitals.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],["217","218"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\serviceWorker.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\firebaseInit.js",[],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":31,"column":6,"nodeType":"225","endLine":31,"endColumn":22,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":31,"column":7,"nodeType":"228","endLine":31,"endColumn":21},{"ruleId":"219","replacedBy":"229"},{"ruleId":"221","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":147,"column":5,"nodeType":"233","messageId":"234","endLine":147,"endColumn":17},{"ruleId":"231","severity":1,"message":"235","line":151,"column":5,"nodeType":"233","messageId":"234","endLine":151,"endColumn":13},{"ruleId":"231","severity":1,"message":"236","line":153,"column":14,"nodeType":"233","messageId":"234","endLine":153,"endColumn":22},{"ruleId":"223","severity":1,"message":"237","line":94,"column":6,"nodeType":"225","endLine":94,"endColumn":17,"suggestions":"238"},{"ruleId":"223","severity":1,"message":"239","line":100,"column":6,"nodeType":"225","endLine":100,"endColumn":8,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"241","line":69,"column":6,"nodeType":"225","endLine":69,"endColumn":8,"suggestions":"242"},{"ruleId":"231","severity":1,"message":"243","line":84,"column":13,"nodeType":"233","messageId":"234","endLine":84,"endColumn":19},{"ruleId":"223","severity":1,"message":"241","line":77,"column":6,"nodeType":"225","endLine":77,"endColumn":8,"suggestions":"244"},{"ruleId":"219","replacedBy":"245"},{"ruleId":"221","replacedBy":"246"},{"ruleId":"219","replacedBy":"247"},{"ruleId":"221","replacedBy":"248"},{"ruleId":"219","replacedBy":"249"},{"ruleId":"221","replacedBy":"250"},{"ruleId":"231","severity":1,"message":"251","line":10,"column":3,"nodeType":"233","messageId":"234","endLine":10,"endColumn":20},{"ruleId":"231","severity":1,"message":"252","line":15,"column":8,"nodeType":"233","messageId":"234","endLine":15,"endColumn":14},{"ruleId":"223","severity":1,"message":"253","line":113,"column":6,"nodeType":"225","endLine":113,"endColumn":17,"suggestions":"254"},{"ruleId":"223","severity":1,"message":"255","line":137,"column":6,"nodeType":"225","endLine":137,"endColumn":17,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":196,"column":15,"nodeType":"259","endLine":196,"endColumn":30},{"ruleId":"223","severity":1,"message":"260","line":61,"column":6,"nodeType":"225","endLine":61,"endColumn":8,"suggestions":"261"},{"ruleId":"231","severity":1,"message":"262","line":71,"column":13,"nodeType":"233","messageId":"234","endLine":71,"endColumn":17},{"ruleId":"219","replacedBy":"263"},{"ruleId":"221","replacedBy":"264"},{"ruleId":"219","replacedBy":"265"},{"ruleId":"221","replacedBy":"266"},{"ruleId":"231","severity":1,"message":"267","line":12,"column":10,"nodeType":"233","messageId":"234","endLine":12,"endColumn":16},{"ruleId":"223","severity":1,"message":"268","line":67,"column":6,"nodeType":"225","endLine":67,"endColumn":8,"suggestions":"269"},{"ruleId":"231","severity":1,"message":"270","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"271","line":56,"column":5,"nodeType":"225","endLine":56,"endColumn":7,"suggestions":"272"},{"ruleId":"257","severity":1,"message":"258","line":185,"column":19,"nodeType":"259","endLine":185,"endColumn":34},{"ruleId":"231","severity":1,"message":"273","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":14},{"ruleId":"231","severity":1,"message":"274","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":15},{"ruleId":"231","severity":1,"message":"275","line":4,"column":17,"nodeType":"233","messageId":"234","endLine":4,"endColumn":25},{"ruleId":"231","severity":1,"message":"276","line":9,"column":10,"nodeType":"233","messageId":"234","endLine":9,"endColumn":19},{"ruleId":"231","severity":1,"message":"277","line":9,"column":21,"nodeType":"233","messageId":"234","endLine":9,"endColumn":33},{"ruleId":"231","severity":1,"message":"278","line":5,"column":27,"nodeType":"233","messageId":"234","endLine":5,"endColumn":34},{"ruleId":"223","severity":1,"message":"241","line":49,"column":6,"nodeType":"225","endLine":49,"endColumn":8,"suggestions":"279"},{"ruleId":"219","replacedBy":"280"},{"ruleId":"221","replacedBy":"281"},{"ruleId":"219","replacedBy":"282"},{"ruleId":"221","replacedBy":"283"},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["286"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","BinaryExpression",["284"],["285"],"no-unused-vars","'registerUser' is assigned a value but never used.","Identifier","unusedVar","'loadUser' is assigned a value but never used.","'cLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.item._id' and 'params.id'. Either include them or remove the dependency array.",["287"],"React Hook useCallback has a missing dependency: 'handleDeleteCall'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["289"],"'schRes' is assigned a value but never used.",["290"],["284"],["285"],["284"],["285"],["284"],["285"],"'onMessageListener' is defined but never used.","'socket' is defined but never used.","React Hook useEffect has a missing dependency: 'user?.webToken'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["292"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has a missing dependency: 'getUserPendingCalls'. Either include it or remove the dependency array.",["293"],"'pres' is assigned a value but never used.",["284"],["285"],["284"],["285"],"'nanoid' is defined but never used.","React Hook useEffect has missing dependencies: 'petId' and 'roomName'. Either include them or remove the dependency array.",["294"],"'useEffect' is defined but never used.","React Hook useMemo has a missing dependency: 'handleShowDoctor'. Either include it or remove the dependency array.",["295"],"'Button' is defined but never used.","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.","'FiVideo' is defined but never used.",["296"],["284"],["285"],["284"],["285"],"no-global-assign","no-unsafe-negation",{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"303","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"303","fix":"316"},"Update the dependencies array to be: [loadUser]",{"range":"317","text":"318"},"Update the dependencies array to be: [location.state.item._id, params.id, user.name]",{"range":"319","text":"320"},"Update the dependencies array to be: [handleDeleteCall]",{"range":"321","text":"322"},"Update the dependencies array to be: [user._id]",{"range":"323","text":"324"},{"range":"325","text":"324"},"Update the dependencies array to be: [user._id, user?.webToken]",{"range":"326","text":"327"},"Update the dependencies array to be: [user, user._id]",{"range":"328","text":"329"},"Update the dependencies array to be: [getUserPendingCalls]",{"range":"330","text":"331"},"Update the dependencies array to be: [petId, roomName]",{"range":"332","text":"333"},"Update the dependencies array to be: [handleShowDoctor]",{"range":"334","text":"335"},{"range":"336","text":"324"},[1164,1180],"[loadUser]",[2849,2860],"[location.state.item._id, params.id, user.name]",[2995,2997],"[handleDeleteCall]",[2149,2151],"[user._id]",[2370,2372],[3461,3472],"[user._id, user?.webToken]",[4059,4070],"[user, user._id]",[1956,1958],"[getUserPendingCalls]",[2137,2139],"[petId, roomName]",[1646,1648],"[handleShowDoctor]",[1593,1595]]