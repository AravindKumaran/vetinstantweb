[{"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js":"1","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js":"2","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js":"3","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js":"4","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js":"5","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js":"6","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js":"7","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js":"8","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js":"9","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js":"10","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js":"11","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js":"12","C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js":"13"},{"size":10781,"mtime":1614926789205,"results":"14","hashOfConfig":"15"},{"size":469,"mtime":1612935527724,"results":"16","hashOfConfig":"15"},{"size":3954,"mtime":1614841801678,"results":"17","hashOfConfig":"15"},{"size":4355,"mtime":1614841813360,"results":"18","hashOfConfig":"15"},{"size":4394,"mtime":1613131068038,"results":"19","hashOfConfig":"15"},{"size":465,"mtime":1613475664031,"results":"20","hashOfConfig":"15"},{"size":235,"mtime":1613037914716,"results":"21","hashOfConfig":"15"},{"size":322,"mtime":1612933214649,"results":"22","hashOfConfig":"15"},{"size":272,"mtime":1612932227806,"results":"23","hashOfConfig":"15"},{"size":637,"mtime":1613027629282,"results":"24","hashOfConfig":"15"},{"size":2923,"mtime":1613194297479,"results":"25","hashOfConfig":"15"},{"size":248,"mtime":1614936733621,"results":"26","hashOfConfig":"15"},{"size":5225,"mtime":1614939867413,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1iylv84",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PatientListPage.js",["56"],"import React, { useState, useEffect } from 'react'\r\nimport Layout from 'components/layouts/Layout'\r\nimport client from 'services/client'\r\nimport toast from 'react-hot-toast'\r\nimport { FiMessageCircle, FiVideo } from 'react-icons/fi'\r\n\r\nimport './PatientListPage.css'\r\n\r\nimport { useAuth } from 'context/use-auth'\r\nimport LoadingSpinner from 'components/shared/UI/LoadingSpinner'\r\nimport { FiChevronRight } from 'react-icons/fi'\r\nimport Backdrop from 'components/shared/UI/Backdrop'\r\nimport Modal from 'components/shared/UI/Modal'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PatientListPage = () => {\r\n  const { user } = useAuth()\r\n  const [patients, setPatients] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = useState(false)\r\n  const [currentPatient, setCurrentPatient] = useState()\r\n  const [pet, setPet] = useState(null)\r\n  const [petLoading, setPetLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getPatients = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const res = await client.get(`/rooms/receiver/${user._id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.token}`,\r\n          },\r\n        })\r\n        // console.log('Res', res)\r\n        setPatients(res.data.room)\r\n        setLoading(false)\r\n      } catch (error) {\r\n        // console.log(error)\r\n        toast.error('Something Went Wrong! Please try again later!')\r\n        setLoading(false)\r\n      }\r\n    }\r\n    getPatients()\r\n  }, [])\r\n\r\n  const toggleModal = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const handlePatModal = async (pat) => {\r\n    setCurrentPatient(pat)\r\n    toggleModal()\r\n    try {\r\n      setPetLoading(true)\r\n      const petRes = await client.get(`/pets/${pat.petId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.token}`,\r\n        },\r\n      })\r\n      console.log('PET', petRes)\r\n      setPet(petRes.data.exPet)\r\n      setPetLoading(false)\r\n    } catch (error) {\r\n      toast.error('Something Went Wrong! Please try again later!')\r\n      setPetLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      {loading && <LoadingSpinner asOverlay />}\r\n      {open && <Backdrop toggle={toggleModal} />}\r\n      {open && (\r\n        <Modal\r\n          toggle={toggleModal}\r\n          title={`${currentPatient.senderName}'s Pet Details`}\r\n        >\r\n          <div className='chat-video_wrapper flex-center'>\r\n            <Link\r\n              to={`/video-call/${currentPatient.name}`}\r\n              className='btn flex-center'\r\n            >\r\n              <FiVideo className='icon' />\r\n              Video Call\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: `/chat/${currentPatient.name}`,\r\n                state: { data: currentPatient },\r\n              }}\r\n              className='btn flex-center'\r\n            >\r\n              <FiMessageCircle className='icon' />\r\n              Chat\r\n            </Link>\r\n          </div>\r\n          {petLoading && <LoadingSpinner asOverlay />}\r\n          {pet && (\r\n            <div className='pet__details'>\r\n              <h5>\r\n                Weight: <span>{pet.weight} Kg</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Gender: <span>{pet.gender}</span>\r\n              </h5>\r\n              <h5>\r\n                Species: <span>{pet.type}</span>\r\n              </h5>\r\n              <h5>\r\n                Breed: <span>{pet.breed}</span>\r\n              </h5>\r\n\r\n              <h5>\r\n                Age:\r\n                <span>\r\n                  {pet.years !== 0 && `${pet.years} Years`}{' '}\r\n                  {pet.months !== 0 && `${pet.months} Months`}\r\n                </span>\r\n              </h5>\r\n\r\n              {pet?.petHistoryImages?.length > 0 && (\r\n                <>\r\n                  <h5>Pet History Images: </h5>\r\n                  <div className='pet__history__images'>\r\n                    {pet.petHistoryImages.map((img, i) => (\r\n                      <div key={`${img}-${i}`} className='pet__history__img'>\r\n                        {/* <img\r\n                          src={`http://192.168.43.242:8000/img/${img}`}\r\n                          width='160'\r\n                          height='160'\r\n                          alt={`${pet.type}`}\r\n                        /> */}\r\n                        <img\r\n                          src={`https://vetinstantbe.azurewebsites.net/img/${img}`}\r\n                          width='160'\r\n                          height='160'\r\n                          alt={`${pet.type}`}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              {pet?.prescriptions?.length > 0 && <h5>Pet Prescriptions:</h5>}\r\n              {pet?.prescriptions?.length > 0 &&\r\n                pet.prescriptions.map((pr, i) => (\r\n                  <div className='py-10' key={pr._id}>\r\n                    <h5>\r\n                      {i + 1}. Prescription: <span>{pr.prescription}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Doctor's Name: <span>{pr.docname}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Date: <span>{new Date(pr.date).toLocaleString()}</span>\r\n                    </h5>\r\n                    {pr.img && (\r\n                      <>\r\n                        <h5>Prescription image</h5>\r\n                        <div className='pet__history__img'>\r\n                          {/* <img\r\n                            src={`http://192.168.43.242:8000/${pr.img}`}\r\n                            width='160'\r\n                            height='160'\r\n                            style={{ maxHeight: '160px', maxWidth: '160px' }}\r\n                            alt={`${pet.type}`}\r\n                          /> */}\r\n                          <img\r\n                            src={`https://vetinstantbe.azurewebsites.net/img/${pr.img}`}\r\n                            width='160'\r\n                            height='160'\r\n                            style={{ maxHeight: '160px', maxWidth: '160px' }}\r\n                            alt={`${pet.type}`}\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n\r\n              {pet?.problems?.length > 0 && <h5>Pet Problems: </h5>}\r\n              {pet?.problems?.length > 0 &&\r\n                pet.problems.map((pb, i) => (\r\n                  <div className='pet__problems py-10' key={pb._id}>\r\n                    <h5>\r\n                      {i + 1}. Problem: <span>{pb.problem}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Doctor's Name: <span>{pb.docname}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Time Period: <span>{pb.time}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Appetite: <span>{pb.Appetite}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Behaviour: <span>{pb.Behaviour}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Eyes: <span>{pb.Eyes}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Comment: <span>{pb.comment}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Gait: <span>{pb.Gait}</span>\r\n                    </h5>\r\n                    <h5>\r\n                      Mucous: <span>{pb.Mucous}</span>\r\n                    </h5>\r\n\r\n                    {pb.Ears?.length > 0 && <h5>Ears: </h5>}\r\n\r\n                    {pb.Ears?.length > 0 &&\r\n                      pb.Ears.map((er, i) => <h3 key={`${i}-Ears`}> {er}</h3>)}\r\n\r\n                    {pb.Feces?.length > 0 && <h5>Faces: </h5>}\r\n\r\n                    {pb.Feces?.length > 0 &&\r\n                      pb.Feces.map((fc, i) => (\r\n                        <h3 key={`Feces ${i}`}> {fc}</h3>\r\n                      ))}\r\n                    {pb.Urine?.length > 0 && <h5>Urines: </h5>}\r\n\r\n                    {pb.Urine?.length > 0 &&\r\n                      pb.Urine.map((ur, i) => (\r\n                        <h3 key={`Urines ${i}`}> {ur}</h3>\r\n                      ))}\r\n                    {pb.Skin?.length > 0 && <h5>Skins: </h5>}\r\n\r\n                    {pb.Skin?.length > 0 &&\r\n                      pb.Skin.map((sk, i) => <h3 key={`Skins ${i}`}> {sk}</h3>)}\r\n\r\n                    {pb?.images?.length && <h5>Pet Problem image</h5>}\r\n                    <div className='pet__history__images'>\r\n                      {pb?.images?.length > 0 &&\r\n                        pb.images.map((img, i) => (\r\n                          <div\r\n                            key={`${img}-${i}`}\r\n                            className='pet__history__img'\r\n                          >\r\n                            {/* <img\r\n                              src={`http://192.168.43.242:8000/${img}`}\r\n                              width='160'\r\n                              height='160'\r\n                              style={{ maxHeight: '160px', maxWidth: '160px' }}\r\n                              alt={`${pet.type}`}\r\n                            /> */}\r\n                            <img\r\n                              src={`https://vetinstantbe.azurewebsites.net/img/${img}`}\r\n                              width='160'\r\n                              height='160'\r\n                              style={{ maxHeight: '160px', maxWidth: '160px' }}\r\n                              alt={`${pet.type}`}\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          )}\r\n        </Modal>\r\n      )}\r\n      {patients.length === 0 && (\r\n        <h3 className='text-center'>\r\n          No Patients Have Contacted You, Please Comeback After Some Time!\r\n        </h3>\r\n      )}\r\n\r\n      {patients.length > 0 && <h3 className='text-center'>Patients List:</h3>}\r\n      {patients.length > 0 && (\r\n        <div className='center'>\r\n          {patients.map((pat) => (\r\n            <div\r\n              key={pat._id}\r\n              className='patient__list'\r\n              onClick={() => handlePatModal(pat)}\r\n            >\r\n              <div className='patient__list__item'>\r\n                <p className='patient__list__item__img'>{pat.senderName[0]}</p>\r\n                <p className='patient__list__item__name'>{pat.senderName}</p>\r\n              </div>\r\n              <FiChevronRight style={{ fontSize: '2.5rem' }} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PatientListPage\r\n",["57","58"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\index.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\context\\use-auth.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\auth\\LoginPage.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\PrescriptionPage.js",["59"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\DateTimeInput.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\layouts\\Layout.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\Forms\\Button.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\LoadingSpinner.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\shared\\UI\\Modal.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\components\\videoCall\\Participant.js",["60","61","62","63","64"],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\services\\socket.js",[],"C:\\Users\\Avinash\\Desktop\\ReactNative\\Web\\vetinstantweb\\src\\pages\\doctor\\HomePage.js",["65"],{"ruleId":"66","severity":1,"message":"67","line":44,"column":6,"nodeType":"68","endLine":44,"endColumn":8,"suggestions":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"67","line":72,"column":6,"nodeType":"68","endLine":72,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":4,"column":17,"nodeType":"77","messageId":"78","endLine":4,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":9,"column":21,"nodeType":"77","messageId":"78","endLine":9,"endColumn":33},{"ruleId":"66","severity":1,"message":"83","line":105,"column":6,"nodeType":"68","endLine":105,"endColumn":17,"suggestions":"84"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-native-reassign",["86"],"no-negated-in-lhs",["87"],["88"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FiMic' is defined but never used.","'FiMicOff' is defined but never used.","'muteAudio' is assigned a value but never used.","'setMuteAudio' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["89"],{"desc":"90","fix":"91"},"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [user._id]",{"range":"95","text":"96"},{"range":"97","text":"96"},"Update the dependencies array to be: [user, user._id]",{"range":"98","text":"99"},[1500,1502],"[user._id]",[2277,2279],[3072,3083],"[user, user._id]"]